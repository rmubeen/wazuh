openapi: '3.0.0'
info:
  description: "The Wazuh API is an open source RESTful API that allows for interaction\
    \ with the Wazuh manager from a web browser, command line tool like cURL or any\
    \ script or program that can make web requests. The Wazuh Kibana app relies on\
    \ this heavily and Wazuhâ€™s goal is to accommodate complete remote management of\
    \ the Wazuh infrastructure via the Wazuh Kibana app. Use the API to easily perform\
    \ everyday actions like adding an agent, restarting the manager(s) or agent(s)\
    \ or looking up syscheck details.\n"
  version: '4.0.0'
  x-revision: 4000
  title: 'Wazuh API'
  license:
    name: 'GPL 2.0'
    url: 'https://github.com/wazuh/wazuh/blob/master/LICENSE'

components:
  responses:
    ResponseError:
      description: Response to report a result error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

  schemas:
    ## Common models
    ApiResponse:
      type: object
      properties:
        message:
          type: string
          description: Human readable description to explain the result of the request

    ListMetadata:
      type: object
      required:
      - totalItems
      properties:
        totalItems:
          type: integer
          format: int32
          minimum: 0
          description: Total elements available. It can be used to implement pagination over results.

    ApiError:
      type: object
      required:
        - type
        - title
        - detail
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        detail:
          type: string
        instance:
          type: string
          format: uri
        code:
          type: integer
          format: int32
        remediation:
          type: string
        dapi_errors:
          type: object
          additionalProperties:
            type: object
            properties:
              error:
                type: string
              logfile:
                type: string
                format: path

    ScanIdTime:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Scan ID.
        time:
          type: string
          format: date-time
          description: Date when the scan was performed.

    ItemAffected:
      type: object
      required:
      - affected_items
      properties:
        affected_items:
          type: array
          description: Items that successfully applied the API call action.
          items:
            type: string
        failed_items:
          type: array
          description: List of items that have failed when doing the requested operation. It's not returned when it's empty.
          items:
            type: string

    AllItemsAffected:
      type: object
      required:
        - older_than
        - total_affected_items
      allOf:
        - $ref: '#/components/schemas/ItemAffected'
      properties:
        older_than:
          type: string
          format: timeframe
          default: 7d
          description: Returns older than parameter used. It can be the default value or the parameter send by the user.
        total_affected_items:
          type: integer
          format: int32
          description: Number of items that have successfully did the requested operation.
        total_failed_items:
          type: integer
          format: int32
          minimum: 1
          description: Number of items that couldn't do the requested operation. Only returned when it's higher than 0.

    BasicInfo:
      type: object
      properties:
        title:
          type: string
          description: API title name.
        api_version:
          type: string
          description: API version installed in the node.
        revision:
          type: integer
          format: int32
        license_name:
          type: string
          description: API license name.
        license_url:
          type: string
          description: API license url.
        hostname:
          type: string
          description: Server hostname.
        timestamp:
          type: string

    GroupId:
      type: string
      format: alphanumeric

    ## Agents models
    ExtraAgentFields:
      type: object
      required:
      - ip
      - status
      - dateAdd
      - node_name
      properties:
        status:
          $ref: '#/components/schemas/AgentStatus'
        configSum:
          type: string
          description: MD5 checksum of agent configuration file.
        group:
          type: array
          description: List of groups that the agent belongs to.
          items:
            type: string
        mergedSum:
          type: string
          description: MD5 checksum of all agent shared configuration files merged.
        ip:
          type: string
          description: IP where the agent communicates with the manager. If the manager can't get this information, it will be the same as registerIP field.
        registerIP:
          type: string
          description: IP used at agent registration process.
        manager:
          type: string
          description: Hostname of the manager where the agent is reporting to.
        node_name:
          type: string
          description: Node ID where the agent is reporting to.
        dateAdd:
          type: string
          format: date-time
          description: Date when the agent was registered.
        lastKeepAlive:
          type: string
          format: date-time
          description: Date when the last keep alive was received from the agent.

        os:
          type: object
          properties:
            major:
              type: string
            name:
              type: string
            uname:
              type: string
            platform:
              type: string
            version:
              type: string
            codename:
              type: string
            arch:
              type: string
            minor:
              type: string
          description: Agent OS information.

    Agent:
      allOf:
      - $ref: '#/components/schemas/AgentSimple'
      - $ref: '#/components/schemas/ExtraAgentFields'

    AgentGroup:
      type: object
      required:
      - count
      - name
      - configSum
      properties:
        count:
          type: integer
          minimum: 0
          description: Number of agents belonging to that group.
        name:
          type: string
        mergedSum:
          type: string
          format: hash
          description: MD5 checksum of all group shared files merged in a single one (merged.mg)
        configSum:
          type: string
          format: hash
          description: MD5 checksum of the group configuration file (agent.conf).

    AgentGroupDeleted:
      type: object
      required:
      - affected_agents
      allOf:
        - $ref: '#/components/schemas/ItemAffected'
      properties:
        affected_agents:
          type: array
          description: List of agents which belonged to the group but were moved to the default one.
          items:
            $ref: '#/components/schemas/AgentID'

    AgentIdKey:
      type: object
      required:
        - id
        - key
      properties:
        id:
          $ref: '#/components/schemas/AgentID'
        key:
          type: string
          format: base64

    AgentSimple:
      type: object
      required:
      - id
      - name
      properties:
        version:
          type: string
          description: Wazuh version the agent has intalled.
        id:
          $ref: '#/components/schemas/AgentID'
        name:
          type: string
          description: Agent name used at registration process.

    AgentStatus:
      type: string
      enum:
      - active
      - pending
      - neverconnected
      - disconnected
      description: Agent status. It is calculated based on the last keep alive and the Wazuh version.

    AgentID:
      type: string
      minLength: 3
      description: Agent ID.
      format: numbers

    AgentConfiguration:
      type: object
      description: Configuration the agent is currently using. The output of this API call depends on the component requested and the agent configuration.

    CDBList:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
        path:
          type: string
          description: Filepath that contains the returned CDB definitions.

    GroupConfiguration:
      type: object
      required:
      - filter
      - config
      properties:
        filter:
          type: object
          properties:
            os:
              type: string
              description: OS family where the configuration is being applied.
            name:
              type: string
              description: The name of the agent where that configuration is being applied.
            profile:
              type: string
              description: Profile name. Any agent configured to use the defined profile may use the block.
        config:
          type: object
          description: Group configuration. The fields on this object depend on the actual group configuration.

    ## CisCat models
    CiscatResults:
      type: object
      properties:
        profile:
          type: string
          description: CIS-CAT profile scanned.
        score:
          type: integer
          format: int32
          description: Percentage of passed checks.
        error:
          type: integer
          format: int32
          description: "Number of checks that CIS-CAT wasn't able to run."
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        fail:
          type: integer
          format: int32
          description: Number of failed checks. If this number is higher than 0 the host will probably have a vulnerability.
        benchmark:
          type: string
          description: CIS-CAT benchmark where the profile is defined.
        pass:
          type: integer
          format: int32
          description: Number of passed checks.
        notchecked:
          type: integer
          format: int32
          description: Number of not passed checks.
        unknown:
          type: integer
          format: int32
          description: Number of checks which status CIS-CAT wasn't able to determine.

    ## Cluster models
    ClusterNodeBasic:
      type: object
      properties:
        type:
          type: string
          enum:
          - worker
          - master
          description: Node type.
        version:
          type: string
          format: \d+\.\d+\.\d+
          description: Wazuh version installed in the node.
        ip:
          type: string
          description: IP the node is using to communicate with other nodes in the cluster.

    ClusterNodeName:
      type: string
      description: Node ID.

    ClusterNode:
      allOf:
        - $ref: '#/components/schemas/ClusterNodeBasic'
        - type: object
          properties:
            name:
              $ref: '#/components/schemas/ClusterNodeName'
        
    Healthcheck:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ClusterNodeName'
        info:
          allOf:
            - $ref: '#/components/schemas/ClusterNodeBasic'
            - type: object
              properties:
                totalActiveAgents:
                  type: integer
                  format: int32
                  minimum: 0
                  description: Number of agents currently reporting to that node.
        status:
          type: array
          description: Field only available in worker nodes. Shows information regarding synchronized data with the master node.
          items:
            type: object
            properties:
              type:
                type: string
                description: Type of synchronization.
                enum:
                  - Agent status
                  - Extra valid
                  - Integrity
                  - Last keep alive
              date_start:
                type: string
                format: date-time
                description: Date when the synchronization process started.
              date_end:
                type: string
                format: date-time
                description: Date when the synchronization process finished.
              synchronized_files:
                type: integer
                format: int32
                description: Number of synchronized files.
              free:
                type: boolean
                description: Whether there is a synchronization process in progress or not.

    DaemonStatus:
      type: string
      enum:
      - stopped
      - running

    # Cluster and manager models
    WazuhDaemonsStatus:
      type: object
      properties:
        ossec-agentlessd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-analysisd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-authd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-csyslogd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-dbd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-monitord:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-execd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-integratord:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-logcollector:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-maild:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-remoted:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-reportd:
          $ref: '#/components/schemas/DaemonStatus'
        ossec-syscheckd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-clusterd:
          $ref: '#/components/schemas/DaemonStatus'
        wazuh-modulesd:
          $ref: '#/components/schemas/DaemonStatus'

    WazuhInfo:
      type: object
      properties:
        path:
          type: string
          description: Wazuh install path.
        version:
          type: string
          description: Wazuh version.
        compilation_date:
          type: string
          format: date-time
        type:
          type: string
          description: "Wazuh install type. Since the API can only be installed in managers, this value will always return that."
          enum:
          - manager
        max_agents:
          type: integer
          format: int32
          minimum: 0
          description: Maximum number of agents that can be registered. This variable is defined at compilation time.
        openssl_support:
          type: boolean
        ruleset_version:
          type: string
        tz_offset:
          type: string
        tz_name:
          type: string

    WazuhConfiguration:
      type: object
      properties:
        active-response:
          type: object
        command:
          type: array
          items:
            type: object
        agentless:
          type: object
        localfile:
          type: array
          items:
            type: object
        remote:
          type: array
          items:
            type: object
        syslog_output:
          type: object
        integration:
          type: object
        alerts:
          type: object
        client:
          type: object
        database_output:
          type: object
        email_alerts:
          type: object
        reports:
          type: object
        global:
          type: object
        open-scap:
          type: object
        cis-cat:
          type: object
        syscollector:
          type: object
        rootcheck:
          type: object
        ruleset:
          type: object
        syscheck:
          type: object
        auth:
          type: object
        cluster:
          type: object
        vulnerability-detector:
          type: object
        osquery:
          type: object
        labels:
          type: object

    WazuhStats:
      type: array
      items:
        type: object
        properties:
          hour:
            type: integer
            format: int32
            description: Hour of the day in 24h format.
          alerts:
            type: array
            items:
              type: object
              properties:
                sigid:
                  type: integer
                  format: int32
                  description: Rule ID that matched the event.
                level:
                  type: integer
                  format: int32
                  minimum: 3
                  maximum: 15
                  description: Alert level
                times:
                  type: integer
                  format: int32
                  description: Number of times the alert was raised during the specified hour.
          totalAlerts:
            type: integer
            format: int32
            description: Number of alerts raised during the specified hour.
          events:
            type: integer
            format: int32
            description: Number of events procesed during the specified hour.
          syscheck:
            type: integer
            format: int32
            description: Number of syscheck alerts raised during the specified hour.
          firewall:
            type: integer
            format: int32
            description: Number of firewall alerts raised during the specified hour.

    WazuhHourlyStats:
      type: object
      properties:
        averages:
          type: array
          maxLength: 24
          minLength: 24
          description: Array containing the number of alerts for every hour.
          items:
            type: integer
        iterations:
          type: integer
          format: int32

    WazuhWeeklyStats:
      type: object
      properties:
        Sun:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Mon:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Tue:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Wed:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Thu:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Fri:
          $ref: '#/components/schemas/WazuhHourlyStats'
        Sat:
          $ref: '#/components/schemas/WazuhHourlyStats'

    WazuhAnalysisdStats:
      type: object
      properties:
        total_events_decoded:
          type: integer
          format: int32
          description: Total events decoded in the last 5 seconds. This number is not accumulative, the number in the following 5 seconds can be lower than the previous one.
        syscheck_events_decoded:
          type: integer
          format: int32
          description: Same as `total_events_decoded` but for FIM events.
        syscheck_edps:
          type: integer
          format: int32
          description: FIM events decoded per second (EDPS = Events Decoded Per Second).
        syscollector_events_decoded:
          type: integer
          format: int32
          description: Same as `total_events_decoded` but for system inventory events.
        syscollector_edps:
          type: integer
          format: int32
          description: System inventory events decoded per second.
        rootcheck_events_decoded:
          type: integer
          format: int32
          description: Same as `total_events_decoded` but for rootcheck events.
        rootcheck_edps:
          type: integer
          format: int32
          description: Rootcheck events decoded per second.
        sca_events_decoded:
          type: integer
          format: int32
          description: Same as `total_events_decoded` but for policy monitoring events.
        sca_edps:
          type: integer
          format: int32
          description: Policy monitoring events decoded per second.
        hostinfo_events_decoded:
          type: integer
          format: int32
          description: Same as `total_events_decoded` but for hostinfo events.
        hostinfo_edps:
          type: integer
          format: int32
          description: Hostinfo events decoded per second.
        winevt_events_decoded:
          type: integer
          format: int32
          description: Same as `total_events_decoded` but for Windows events.
        winevt_edps:
          type: integer
          format: int32
          description: Windows events decoded per second.
        other_events_decoded:
          type: integer
          format: int32
          description: Same as `total_events_decoded` but for non catalogued events.
        other_events_edps:
          type: integer
          format: int32
          description: Non catalogued events decoded per second.
        events_processed:
          type: integer
          format: int32
          description: Total of events processed (i.e. matched against Wazuh ruleset) in the last 5 seconds.
        events_edps:
          type: integer
          format: int32
          description: Same as `events_processed` but per second.
        events_received:
          type: integer
          format: int32
          description: Events received in `analysisd` from the rest of modules in the last 5 seconds.
        events_dropped:
          type: integer
          format: int32
          description: "Discarded events because they didn't match any rule in the ruleset."
        alerts_written:
          type: integer
          format: int32
          description: Total of alerts written in disk during the last 5 seconds.
        firewall_written:
          type: integer
          format: int32
          description: Same as `alerts_written` but focusing in firewall alerts.
        fts_written:
          type: integer
          format: int32
          description: "Same as `alerts_written` but focusing in [FTS alerts](https://documentation.wazuh.com/current/user-manual/ruleset/ruleset-xml-syntax/decoders.html?highlight=fts#fts)."
        syscheck_queue_usage:
          type: integer
          format: int32
          description: Percentage of use in the syscheck events queue pending to be decoded. Events are discarded when the queue is full.
        syscheck_queue_size:
          type: integer
          format: int32
          description: Syscheck events queue size.
        syscollector_queue_usage:
          type: integer
          format: int32
          description: Same as `syscheck_queue_usage` but for system inventory events.
        syscollector_queue_size:
          type: integer
          format: int32
          description: System inventory events queue size.
        rootcheck_queue_usage:
          type: integer
          format: int32
          description: Same as `syscheck_queue_usage` but for rootcheck events.
        rootcheck_queue_size:
          type: integer
          format: int32
          description: Rootcheck events queue size.
        sca_queue_usage:
          type: integer
          format: int32
          description: Same as `syscheck_queue_usage` but for policy monitoring events.
        sca_queue_size:
          type: integer
          format: int32
          description: Policy monitoring events queue size.
        hostinfo_queue_usage:
          type: integer
          format: int32
          description: Same as `syscheck_queue_usage` but for hostinfo events.
        hostinfo_queue_size:
          type: integer
          format: int32
          description: Hostinfo events queue size.
        winevt_queue_usage:
          type: integer
          format: int32
          description: Same as `syscheck_queue_usage` but for Windows events.
        winevt_queue_size:
          type: integer
          format: int32
          description: Windows events queue size.
        event_queue_usage:
          type: integer
          format: int32
          description: Same as `syscheck_queue_usage` but for events not catalogued in any of the previously mentioned queues.
        event_queue_size:
          type: integer
          format: int32
          description: Non catalogued events queue size.
        rule_matching_queue_usage:
          type: integer
          format: int32
          description: After decoding, events are pushed to a _pending to process_ queue which will match the events against the Wazuh ruleset to raise alerts. This variable shows usage of that queue.
        rule_matching_queue_size:
          type: integer
          format: int32
          description: Pending to process events queue size.
        alerts_queue_usage:
          type: integer
          format: int32
          description: If an event matches a rule, an alert is raised. The alerts are pushed to a _pending to write in disk alerts_ queue. This variable shows usage of that queue.
        alerts_queue_size:
          type: integer
          format: int32
          description: Pending to write in disk alerts queue size.
        firewall_queue_usage:
          type: integer
          format: int32
          description: Percentage of use in the queue of events to write in the firewall log.
        firewall_queue_size:
          type: integer
          format: int32
          description: _Events to write in the firewall log_ queue size.
        statistical_queue_usage:
          type: integer
          format: int32
          description: Stats log queue usage.
        statistical_queue_size:
          type: integer
          format: int32
          description: Stats log queue size.
        archives_queue_usage:
          type: integer
          format: int32
          description: _Events to write in the archives.log_ queue usage.
        archives_queue_size:
          type: integer
          format: int32
          description: _Events to write in the archives.log_ queue size.

    WazuhRemotedStats:
      type: object
      properties:
        queue_size:
          type: integer
          format: int32
          description: Usage of the queue to storage events from agents.
        total_queue_size:
          type: integer
          format: int32
          description: Total queue size to store events from agents.
        tcp_sessions:
          type: integer
          format: int32
          description: Number of TCP active sessions during the last five seconds.
        evt_count:
          type: integer
          format: int32
          description: Number of events sent to Analysisd during the last five seconds.
        ctrl_msg_count:
          type: integer
          format: int32
          description: Number of control messages received from all agents during the last five seconds.
        discarded_count:
          type: integer
          format: int32
          description: Number of discarded events received from agents during the last five seconds.
        msg_sent:
          type: integer
          format: int32
          description: Number of messages sent to the agents during the last five seconds.
        recv_bytes:
          type: integer
          format: int32
          description: Number of received bytes from all agents during the last five seconds.

    WazuhLogs:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        tag:
          type: string
          description: Wazuh component that logged the event.
          enum:
          - ossec-analysisd
          - ossec-remoted
          - sca
          - ossec-authd
          - wazuh-db
          - ossec-execd
          - ossec-maild
          - ossec-monitord
          - ossec-logcollector
          - ossec-rootcheck
          - ossec-syscheckd
          - wazuh-modulesd
          - wazuh-modulesd:agent-key-polling
          - wazuh-modulesd:aws-s3
          - wazuh-modulesd:azure-logs
          - wazuh-modulesd:ciscat
          - wazuh-modulesd:command
          - wazuh-modulesd:database
          - wazuh-modulesd:docker-listener
          - wazuh-modulesd:download
          - wazuh-modulesd:oscap
          - wazuh-modulesd:osquery
          - wazuh-modulesd:syscollector
          - wazuh-modulesd:vulnerability-detector
          - ossec-agentlessd
          - ossec-testrule
          - ossec-csyslogd
          - ossec-dbd
          - ossec-integratord
          - ossec-reportd
        level:
          type: string
          description: Log level.
          enum:
          - error
          - info
          - warning
          - debug
          - debug2
          - critical
        description:
          type: string
          description: Log message.

    LogSummary:
      type: object
      properties:
        info:
          type: integer
          format: int32
          minimum: 0
        all:
          type: integer
          format: int32
          minimum: 0
        critical:
          type: integer
          format: int32
          minimum: 0
        error:
          type: integer
          format: int32
          minimum: 0
        debug:
          type: integer
          format: int32
          minimum: 0
        warning:
          type: integer
          format: int32
          minimum: 0

    WazuhLogsSummary:
      type: object
      properties:
          ossec-analysisd:
            $ref: '#/components/schemas/LogSummary'
          ossec-remoted:
            $ref: '#/components/schemas/LogSummary'
          sca:
            $ref: '#/components/schemas/LogSummary'
          ossec-authd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-db:
            $ref: '#/components/schemas/LogSummary'
          ossec-execd:
            $ref: '#/components/schemas/LogSummary'
          ossec-maild:
            $ref: '#/components/schemas/LogSummary'
          ossec-monitord:
            $ref: '#/components/schemas/LogSummary'
          ossec-logcollector:
            $ref: '#/components/schemas/LogSummary'
          ossec-rootcheck:
            $ref: '#/components/schemas/LogSummary'
          ossec-syscheckd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:agent-key-polling:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:aws-s3:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:azure-logs:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:ciscat:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:command:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:database:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:docker-listener:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:download:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:oscap:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:osquery:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:syscollector:
            $ref: '#/components/schemas/LogSummary'
          wazuh-modulesd:vulnerability-detector:
            $ref: '#/components/schemas/LogSummary'
          ossec-agentlessd:
            $ref: '#/components/schemas/LogSummary'
          ossec-testrule:
            $ref: '#/components/schemas/LogSummary'
          ossec-csyslogd:
            $ref: '#/components/schemas/LogSummary'
          ossec-dbd:
            $ref: '#/components/schemas/LogSummary'
          ossec-integratord:
            $ref: '#/components/schemas/LogSummary'
          ossec-reportd:
            $ref: '#/components/schemas/LogSummary'

    ConfigurationValidation:
      type: object
      properties:
        status:
          type: string
          description: "Configuration status. If the returned value is KO, the configuration isn't valid."
          enum:
          - OK
          - KO
        details:
          type: array
          description: "Errors found reading the configuration. If the status is `OK` this field isn't returned."
          items:
            type: string

    # Rootcheck models
    RootcheckDatabase:
      type: object
      properties:
        status:
          type: string
          description: Status of the check, respecting to the previous scan.
          enum:
          - outstanding
          - solved
        readDay:
          type: string
          format: date-time
          description: Lastest scan date.
        oldDay:
          type: string
          format: date-time
          description: Previous scan date.
        pci:
          type: string
          description: PCI DSS requirement level.
        cis:
          type: string
          description: CIS compliance requirement level.
        event:
          type: string
          description: Brief description of what is being checked.

    LastScan:
      type: object
      properties:
        end:
          type: string
          format: date-time
          description: 'Date when the latest scan finished. If it is in progress, "n/a" will be returned.'
        start:
          type: string
          format: date-time
          description: 'Date when the latest scan started. If no scans have been run, "n/a" will be returned.'

    # Rules models
    RulesFiles:
      type: object
      properties:
        file:
          type: string
          description: Filename where the rule is defined.
        path:
          type: string
          description: Path where the file defining the rule is located. The path is relative to the Wazuh install path.
        status:
          type: string
          description: Rule status.
          enum:
          - enabled
          - disabled

    Rules:
      allOf:
        - $ref: '#/components/schemas/RulesFiles'
        - type: object
          properties:
            id:
              type: integer
              format: int32
              description: Rule ID.
            level:
              type: integer
              format: int32
              minimum: 0
              maximum: 15
              description: Rule level.
            description:
              type: string
              description: Rule description. This description is shown when an alert matching the rule is raised.
            groups:
              type: array
              description: Groups the rule belongs to.
              items:
                type: string
            pci:
              type: array
              description: PCI DSS checks the rule is checking.
              items:
                type: string
            gdpr:
              type: array
              description: GDPR checks the rule is checking.
              items:
                type: string
            details:
              type: object
              description: Rule definition details.

    # SCA models
    SCAChecks:
      type: object
      properties:
        file:
          type: string
          description: Analyzed file path.
        policy_id:
          type: string
          description: Scanned policy ID.
        id:
          type: integer
          format: int32
          description: Policy check ID. A policy contains multiple checks.
        title:
          type: string
          description: A brief description of what is being checked.
        description:
          type: string
          description: A description of what is being checked.
        rationale:
          type: string
          description: Explains why this check is necessary.
        remediation:
          type: string
          description: Explains how to fix the check, this field is very useful in case the check failed.
        process:
          type: string
          description: Checks whether a process is running or not. It's only returned when the checked process it's running.
        directory:
          type: string
          description: Analyzed directories.
        registry:
          type: string
          description: Analyzed registry.
        references:
          type: string
          description: A link to a documentation page about the check.
        result:
          type: string
          description: Check result.
          enum:
            - "passed"
            - "failed"

    SCADatabase:
      type: object
      properties:
        policy_id:
          type: string
          description: Policy ID. This value must be used in `GET/sca/{agent_id}/checks/{policy_id}` API call.
        name:
          type: string
          description: Policy name.
        description:
          type: string
          description: Brief description of what the policy is checking.
        references:
          type: string
          description: A link to a documentation page about the policy.
        pass:
          type: integer
          format: int32
          description: Number of passed checks.
        fail:
          type: integer
          format: int32
          description: Number of failed checks. If this number is higher than 0 the host has a vulnerability.
        score:
          type: integer
          format: int32
          description: Percentage of passed checks.
        end_scan:
          type: string
          format: date-time
          description: When the last scan finished.
        start_scan:
          type: string
          format: date-time
          description: When the last scan started.

    # Syscheck models
    SyscheckDatabase:
      type: object
      properties:
        sha1:
          type: string
          format: hash
          description: SHA1 checksum of the file.
        file:
          type: string
          description: File name that raised the alert.
        md5:
          type: string
          format: hash
          description: MD5 checksum of the file.
        inode:
          type: integer
          format: int32
          description: inode of the file. Only available in Linux agents.
        uid:
          type: string
          format: numbers
          description: UID of the file.
        date:
          type: string
          format: date-time
          description: Date when the alert was raised.
        perm:
          type: string
          format: numbers
          description: File permissions.
        type:
          type: string
          description: File type. Registry type only available in Windows agents.
          enum:
          - file
          - registry
        gname:
          type: string
          format: names
          description: Group name. Only available in Linux agents.
        uname:
          type: string
          format: names
          description: User name of the file.
        size:
          type: integer
          format: int64
          description: File size in bytes.
        gid:
          type: string
          format: numbers
          description: GID of the file. Only available in Linux agents.
        mtime:
          type: string
          format: date-time
          description: Last modification date of the file.
        sha256:
          type: string
          format: hash
          description: SHA256 checksum of the file.

    # Decoders models
    Decoder:
      type: object
      allOf:
        - $ref: '#/components/schemas/DecoderFile'
      properties:
        name:
          type: string
          description: Decoder name
        position:
          type: integer
          format: int32
          minimum: 0
          description: Position of this decoder in the decoder file. The parent decoder will have position 0, the following defined decoder will have position 1, and so on.
        details:
          type: object
          description: Decoder definition fields.
          properties:
            program_name:
              type: string
            parent:
              type: string
            prematch:
              type: string
            regex:
              type: string
            order:
              type: string

    DecoderFile:
      type: object
      required:
      - file
      - status
      properties:
        file:
          type: string
          description: Filename containing decoder definitions.
        status:
          type: string
          description: Whether the decoders defined in that file are used by Wazuh or not.

    # Syscollector models
    SyscollectorHardware:
      type: object
      properties:
        cpu:
          type: object
          properties:
            cores:
              type: integer
              format: int32
              minimum: 0
              description: Number of cores the CPU has.
            mhz:
              type: number
              format: float
              minimum: 0
              description: Mhz the CPU has.
            name:
              type: string
              description: CPU name.
        ram:
          type: object
          properties:
            free:
              type: integer
              format: int32
              minimum: 0
              description: Current free RAM memory.
            total:
              type: integer
              format: int32
              minimum: 0
              description: Total RAM memory.
            usage:
              type: integer
              format: int32
              minimum: 0
              maximum: 100
              description: RAM memory currently used.
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        board_serial:
          type: string
          description: Motherboard serial number. This value will be empty in virtual machines.
        agent_id:
          $ref: '#/components/schemas/AgentID'

    SyscollectorNetwork:
      type: object
      properties:
        iface:
          type: string
          description: Network interface name.
        scan_id:
          type: integer
          format: int64
          description: Scan ID.
        address:
          type: string
          description: IP address associated with the network interface.
        netmask:
          type: string
          description: Netmask associated with the network interface.
        agent_id:
          $ref: '#/components/schemas/AgentID'

    NetworkInterfacePackets:
      type: object
      properties:
        bytes:
          type: integer
          format: int32
          minimum: 0
          description: Number of bytes in the network interface.
        dropped:
          type: integer
          format: int32
          minimum: 0
          description: Number of dropped packages in the network interface.
        error:
          type: integer
          format: int32
          minimum: 0
          description: Number of packages containing any error in the network interface.
        packets:
          type: integer
          format: int32
          minimum: 0
          description: Number of packages in the network interface.

    SyscollectorInterface:
      type: object
      properties:
        rx:
          description: Information related to received packets in the network interface.
          $ref: '#/components/schemas/NetworkInterfacePackets'
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        tx:
          description: Information related to sent packets in the network interface.
          $ref: '#/components/schemas/NetworkInterfacePackets'
        mac:
          type: string
          description: MAC Address of the network interface.
        name:
          type: string
          description: Network interface name.
        type:
          type: string
          description: Network interface type.
        mtu:
          type: integer
          format: int32
          minimum: 0
          description: "Network interface's Maximum Transfer Unit"
        state:
          type: string
          description: Network interface state.
          enum:
          - up
          - down
        agent_id:
          $ref: '#/components/schemas/AgentID'

    SyscollectorProtocol:
      type: object
      properties:
        iface:
          description: Network interface name.
          type: string
        scan_id:
          type: integer
          format: int64
          description: Scan ID.
        type:
          type: string
          description: Protocol of the interface data
          enum:
          - ipv4
          - ipv6
        dhcp:
          type: string
          description: DHCP status.
          enum:
          - enabled
          - disabled
          - unknown
          - BOOTP
        agent_id:
          $ref: '#/components/schemas/AgentID'

    SyscollectorOS:
      type: object
      properties:
        os:
          type: object
          properties:
            codename:
              type: string
              description: OS version codename.
            major:
              type: string
              description: Major release version.
            minor:
              type: string
              description: Minor release version
            name:
              type: string
              description: OS name.
            platform:
              type: string
              description: OS platform name.
            version:
              type: string
              description: Full version name.
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        release:
          type: string
          description: Release name.
        architecture:
          type: string
          description: OS arquitecture.
        version:
          type: string
          description: Release version.
        sysname:
          type: string
          description: System name.
        hostname:
          type: string
          description: Machine's hostname.
        agent_id:
          $ref: '#/components/schemas/AgentID'

    SyscollectorPackages:
      type: object
      properties:
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        name:
          type: string
          description: Package name.
        section:
          type: string
          description: Package section.
        priority:
          type: string
          description: Package priority.
        size:
          type: string
          description: Installed package size in bytes.
        description:
          type: string
          description: Brief package description.
        architecture:
          type: string
          description: Package architecture.
        multiarch:
          type: string
          description: Whether the package has multiarchitecture support.
          enum:
          - allowed
          - same
          - foreign
        vendor:
          type: string
          description: Vendor name.
        version:
          type: string
          description: Release version installed.
        format:
          type: string
          description: Package format.
          enum:
          - deb
          - rpm
          - win
          - pkg
        agent_id:
          $ref: '#/components/schemas/AgentID'

    PortInfo:
      type: object
      properties:
        ip:
          type: string
          description: Bind IP.
        port:
          type: integer
          minimum: 0
          format: int32
          description: Port used.

    SyscollectorPorts:
      type: object
      properties:
        local:
          $ref: '#/components/schemas/PortInfo'
          description: Information regarding local opened port.
        remote:
          $ref: '#/components/schemas/PortInfo'
          description: Information regarding the remote port the machine is connected to.
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        state:
          type: string
          description: Communication status.
          enum:
          - established
          - syn_sent
          - syn_recv
          - fin_wait1
          - fin_wait2
          - time_wait
          - close
          - close_wait
          - last_ack
          - listening
          - closing
          - delete_tcp
          - unknown
        tx_queue:
          type: integer
          format: int32
          minimum: 0
          description: Packets pending to be transmitted.
        rx_queue:
          type: integer
          format: int32
          minimum: 0
          description: Packets at the receiver queue.
        inode:
          type: integer
          format: int64
          description: Port inode.
        protocol:
          type: string
          description: Protocol used in the communication.
          enum:
          - tcp
          - udp
          - tcp6
          - udp6
        agent_id:
          $ref: '#/components/schemas/AgentID'
        pid:
          type: integer
          format: int32
          description: PID owner of the opened port.
        process:
          type: string
          format: alphanumeric
          description: Name of the PID.

    SyscollectorProcess:
      type: object
      properties:
        scan:
          $ref: '#/components/schemas/ScanIdTime'
        fgroup:
          type: string
          description: Filesystem group name.
        state:
          type: string
          description: Process state.
        priority:
          type: integer
          format: int32
          description: Kernel scheduling priority.
        suser:
          type: string
          description: Saved-set user.
        ppid:
          type: integer
          format: int32
          minimum: 0
          description: Process parent PID.
        vm_size:
          type: integer
          format: int32
          minimum: 0
          description: Total VM size (KB)
        session:
          type: integer
          format: int32
          description: Process session.
        pid:
          type: string
          description: Process PID.
        nlwp:
          type: integer
          format: int32
          description: Number of light weight processes.
        name:
          type: string
          description: Process name.
        euser:
          type: string
          description: Effective user.
        sgroup:
          type: string
          description: Saved-set group
        size:
          type: integer
          format: int32
          minimum: 0
          description: Process size in bytes.
        stime:
          type: integer
          format: int32
          minimum: 0
          description: Time spent executing system code.
        nice:
          type: integer
          format: int32
          description: Nice value of the process
        argvs:
          type: string
          description: Process received arguments.
        share:
          type: integer
          format: int32
          minimum: 0
          description: Shared memory.
        processor:
          type: integer
          format: int32
          minimum: 0
          description: Processor number which is running the process.
        ruser:
          type: string
          description: Real user.
        cmd:
          type: string
          description: Executed command.
        egroup:
          type: string
          description: Effective group.
        rgroup:
          type: string
          description: Real group.
        pgrp:
          type: integer
          format: int32
          description: Process group.
        resident:
          type: integer
          format: int32
          description: Process resident size in bytes.
        utime:
          type: integer
          format: int32
          description: Time spent executing user code.
        tgid:
          type: integer
          format: int32
          description: Thread Group ID.
        start_time:
          type: integer
          format: int64
          description: Time when the process started.
        tty:
          type: integer
          format: int32
          description: Process TTY number.
        agent_id:
          $ref: '#/components/schemas/AgentID'

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: "Intended method to get a token"
      x-basicInfoFunc: api.authentication.check_user
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: api.authentication.decode_token

  parameters:
    agent_id:
      in: path
      name: agent_id
      description: Agent ID. All posible values since 000 onwards.
      required: true
      schema:
        $ref: '#/components/schemas/AgentID'
    agent_name:
      in: path
      name: agent_name
      description: Agent name used when the agent was registered.
      required: true
      schema:
        type: string
        format: names
    benchmark:
      in: query
      name: benchmark
      description: Filters by benchmark type.
      schema:
        type: string
        format: alphanumeric
    component:
      in: path
      name: component
      description: Selected agent's component.
      required: true
      schema:
        type: string
        enum:
        - agent
        - agentless
        - analysis
        - auth
        - com
        - csyslog
        - integrator
        - logcollector
        - mail
        - monitor
        - request
        - syscheck
        - wmodules
    configuration:
      in: path
      name: configuration
      description: |
        <p>Selected agent's configuration to read. The configuration to read depends on the selected component. The following table shows all available combinations of component and configuration values:</p>
        <table class="table table-striped table-bordered">
        <thead>
        <tr>
        <th>Component</th>
        <th>Configuration</th>
        <th>Tag</th>
        </tr>
        </thead>
        <tbody>
        <tr>
        <td>agent</td>
        <td>client</td>
        <td><code>&lt;client&gt;</code></td>
        </tr>
        <tr>
        <td>agent</td>
        <td>buffer</td>
        <td><code>&lt;client_buffer&gt;</code></td>
        </tr>
        <tr>
        <td>agent</td>
        <td>labels</td>
        <td><code>&lt;labels&gt;</code></td>
        </tr>
        <tr>
        <td>agent</td>
        <td>internal</td>
        <td>agent, monitord, remoted</td>
        </tr>
        <tr>
        <td>agentless</td>
        <td>agentless</td>
        <td><code>&lt;agentless&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>global</td>
        <td><code>&lt;global&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>active_response</td>
        <td><code>&lt;active-response&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>alerts</td>
        <td><code>&lt;alerts&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>command</td>
        <td><code>&lt;command&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>rules</td>
        <td><code>&lt;rule&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>decoders</td>
        <td><code>&lt;decoder&gt;</code></td>
        </tr>
        <tr>
        <td>analysis</td>
        <td>internal</td>
        <td>analysisd</td>
        </tr>
        <tr>
        <td>auth</td>
        <td>auth</td>
        <td><code>&lt;auth&gt;</code></td>
        </tr>
        <tr>
        <td>com</td>
        <td>active-response</td>
        <td><code>&lt;active-response&gt;</code></td>
        </tr>
        <tr>
        <td>com</td>
        <td>internal</td>
        <td>execd</td>
        </tr>
        <tr>
        <td>com</td>
        <td>cluster</td>
        <td>cluster</td>
        </tr>
        <tr>
        <td>csyslog</td>
        <td>csyslog</td>
        <td><code>&lt;csyslog_output&gt;</code></td>
        </tr>
        <tr>
        <td>integrator</td>
        <td>integration</td>
        <td><code>&lt;integration&gt;</code></td>
        </tr>
        <tr>
        <td>logcollector</td>
        <td>localfile</td>
        <td><code>&lt;localfile&gt;</code></td>
        </tr>
        <tr>
        <td>logcollector</td>
        <td>socket</td>
        <td><code>&lt;socket&gt;</code></td>
        </tr>
        <tr>
        <td>logcollector</td>
        <td>internal</td>
        <td>logcollector</td>
        </tr>
        <tr>
        <td>mail</td>
        <td>global</td>
        <td><code>&lt;global&gt;&lt;email...&gt;</code></td>
        </tr>
        <tr>
        <td>mail</td>
        <td>alerts</td>
        <td><code>&lt;email_alerts&gt;</code></td>
        </tr>
        <tr>
        <td>mail</td>
        <td>internal</td>
        <td>maild</td>
        </tr>
        <tr>
        <td>monitor</td>
        <td>internal</td>
        <td>monitord</td>
        </tr>
        <tr>
        <td>request</td>
        <td>remote</td>
        <td><code>&lt;remote&gt;</code></td>
        </tr>
        <tr>
        <td>request</td>
        <td>internal</td>
        <td>remoted</td>
        </tr>
        <tr>
        <td>syscheck</td>
        <td>syscheck</td>
        <td><code>&lt;syscheck&gt;</code></td>
        </tr>
        <tr>
        <td>syscheck</td>
        <td>rootcheck</td>
        <td><code>&lt;rootcheck&gt;</code></td>
        </tr>
        <tr>
        <td>syscheck</td>
        <td>internal</td>
        <td>syscheck, rootcheck</td>
        </tr>
        <tr>
        <td>wmodules</td>
        <td>wmodules</td>
        <td><code>&lt;wodle&gt;</code></td>
        </tr>
        </tbody>
        </table>
      required: true
      schema:
        type: string
        enum:
        - client
        - buffer
        - labels
        - internal
        - agentless
        - global
        - active_response
        - alerts
        - command
        - rules
        - decoders
        - auth
        - active-response
        - cluster
        - csyslog
        - integration
        - localfile
        - socket
        - remote
        - syscheck
        - rootcheck
        - wmodules
    decoder_name:
      in: path
      name: decoder_name
      description: Decoder name.
      required: true
      schema:
        type: string
        format: names
    description:
      in: query
      name: description
      description: Filters by policy description.
      schema:
        type: string
        format: alphanumeric
    directory:
      in: query
      name: directory
      description: Filters by directory.
      schema:
        type: string
        format: path
    download:
      in: query
      name: download
      description: Downloads the specified file.
      schema:
        type: string
        format: alphanumeric
    error:
      in: query
      name: error
      description: Filters by encountered errors.
      schema:
        type: integer
        format: int32
        minimum: 0
    fail:
      in: query
      name: fail
      description: Filters by failed checks.
      schema:
        type: integer
        format: int32
        minimum: 0
    fields:
      in: query
      name: fields
      description: List of fields affecting the operation.
      schema:
        type: array
        items:
          type: string
          format: names
    file:
      in: query
      name: file
      description: Filters by filename.
      schema:
        type: string
        format: alphanumeric
    file_name:
      in: path
      name: file_name
      description: Filename.
      required: true
      schema:
        type: string
        format: alphanumeric
    format:
      in: query
      name: format
      description: Select output format to return the file. JSON will format the file in JSON format and XML will return the XML raw file in a string.
      schema:
        type: array
        items:
          type: string
          enum:
          - json
          - xml
    group_id:
      in: path
      name: group_id
      description: Group ID.
      required: true
      schema:
        $ref: '#/components/schemas/GroupId'
    agent_group:
      in: query
      name: group
      description: Filters by group of agents.
      schema:
        $ref: '#/components/schemas/GroupId'
    hash:
      in: query
      name: hash
      description: Select algorithm to generate the returned checksums.
      schema:
        type: string
        enum:
          - md5
          - sha1
          - sha224
          - sha256
          - sha384
          - sha512
          - blake2b
          - blake2s
          - sha3_224
          - sha3_256
          - sha3_384
          - sha3_512
          - shake_128
          - shake_256
    limit:
      in: query
      name: limit
      description: Maximum number of elements to return
      schema:
        type: integer
        format: int32
        default: 500
        minimum: 1
    list_agents_ids:
      in: query
      name: list_agents_ids
      description: Array of agent's IDs
      schema:
        type: array
        items:
          $ref: '#/components/schemas/AgentID'
    list_agents:
      in: query
      name: list_agents
      description: Array of agent's IDs
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/AgentID'
    list_groups:
      in: query
      name: list_groups
      description: Array of group's IDs
      schema:
        type: array
        items:
          $ref: '#/components/schemas/GroupId'
    manager_host:
      in: query
      name: manager
      description: Filters by manager hostname which agents are connected to.
      schema:
        type: string
        format: alphanumeric
    name:
      in: query
      name: name
      description: Filters by agent name.
      schema:
        type: string
        format: alphanumeric
    notchecked:
      in: query
      name: notchecked
      description: Filters by not checked.
      schema:
        type: integer
        format: int32
        minimum: 0
    offset:
      in: query
      name: offset
      description: First element to return in the collection
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
    olderThanParam:
      in: query
      name: older_than
      description: |
        Filters out agents which time lapse from last keep alive signal is longer than specified. Time in seconds, â€˜[n_days]dâ€™, â€˜[n_hours]hâ€™, â€˜[n_minutes]mâ€™ or â€˜[n_seconds]sâ€™. For never connected agents, uses the register date. For example, `7d`, `10s` and `10` are valid values. When no time unit is specified, seconds are used.
      schema:
        type: string
        format: timeframe
    pass:
      in: query
      name: pass
      description: Filters by passed checks.
      schema:
        type: integer
        format: int32
        minimum: 0
    pathFilter:
      in: query
      name: path
      description: Filters by path
      schema:
        type: string
        format: etc_path
    pretty:
      in: query
      name: pretty
      description: Show results in human-readable format
      schema:
        type: boolean
        default: false
    process:
      in: query
      name: process
      description: Filters by process name.
      schema:
        type: string
        format: alphanumeric
    profile:
      in: query
      name: profile
      description: Filters by evaluated profile.
      schema:
        type: string
        format: alphanumeric
    policy_id:
      in: path
      name: policy_id
      description: Filters by policy id.
      required: true
      schema:
        type: string
        format: alphanumeric
    purge:
      in: query
      name: purge
      description: Delete an agent from the key store
      schema:
        type: boolean
        default: false
    query:
      in: query
      name: q
      description: Query to filter results by. For example q=&quot;status=Active&quot;
      schema:
        type: string
        format: query
    rationale:
      in: query
      name: rationale
      description: Filters by rationale.
      schema:
        type: string
        format: alphanumeric
    registry:
      in: query
      name: registry
      description: Filters by registry.
      schema:
        type: string
        format: alphanumeric
    references:
      in: query
      name: references
      description: Filters by references.
      schema:
        type: string
        format: alphanumeric
    remediation:
      in: query
      name: remediation
      description: Filters by remediation.
      schema:
        type: string
        format: alphanumeric
    result:
      in: query
      name: result
      description: Filters by result.
      schema:
        type: string
        format: alphanumeric
    score:
      in: query
      name: score
      description: Filters by final score.
      schema:
        type: integer
        format: int32
        minimum: 0
    search:
      in: query
      name: search
      description: Looks for elements with the specified string
      schema:
        type: string
        format: search
    select:
      in: query
      name: select
      description: Select which fields to return (separated by comma)
      schema:
        type: array
        items:
          type: string
          format: names
    # It'd be more appropriate to be an array of strings, and separate the ascending or descending order in another param
    sort:
      in: query
      name: sort
      description: |
            Sorts the collection by a field or fields (separated by comma). Use +/- at the beginning to list in ascending or descending order.
      schema:
        type: string
        format: sort
    statusAgentParam:
      in: query
      name: agent_status
      description: Filters by agent status. Use commas to enter multiple statuses.
      schema:
        type: array
        items:
          type: string
          enum:
          - active
          - pending
          - neverconnected
          - disconnected
        minItems: 1
    statusRLDParam:
      in: query
      name: list_status
      description: Filters by list status. Use commas to enter multiple statuses.
      schema:
        type: array
        items:
          type: string
          enum:
          - enabled
          - disabled
          - all
        minItems: 1
    title:
      in: query
      name: title
      description: Filters by title.
      schema:
        type: string
        format: alphanumeric
    type:
      in: query
      name: type
      description: Type of file.
      schema:
        type: array
        items:
          type: string
          enum:
          - conf
          - rootkit_files
          - rootkit_trojans
          - rcl
    unknown:
      in: query
      name: unknown
      description: Filters by unknown results.
      schema:
        type: integer
        format: int32
    version:
      in: query
      name: version
      description: Filters by agents version.
      schema:
        type: string
        format: alphanumeric
    wait_for_complete:
      in: query
      name: wait_for_complete
      description: Disable timeout response
      schema:
        type: boolean
        default: false
    node_type:
      in: query
      name: type
      description: Filters by node type.
      schema:
        type: string
        enum:
        - worker
        - master
    node_id:
      in: path
      name: node_id
      description: Cluster node name.
      required: true
      schema:
        type: string
        format: names
    node_name:
      in: query
      name: node_name
      description: Filters by node name.
      schema:
        type: string
        format: names
    section:
      in: query
      name: section
      description: Indicates the wazuh configuration section
      schema:
        type: string
        enum:
        - active-response
        - command
        - agentless
        - localfile
        - remote
        - syslog_output
        - integration
        - alerts
        - client
        - database_output
        - email_alerts
        - reports
        - global
        - open-scap
        - cis-cat
        - syscollector
        - rootcheck
        - ruleset
        - syscheck
        - auth
        - cluster
        - vulnerability-detector
        - osquery
        - labels
    field:
      in: query
      name: field
      description: Indicates a section child, e.g, fields for rule section are include, decoder_dir, etc.
      schema:
        type: string
        format: names
    date:
      in: query
      name: date
      description: Selects the date for getting the statistical information. Format YYYY-MM-DD.
      schema:
        type: string
        format: date
    category:
      in: query
      name: category
      description: Filter by category of log.
      schema:
        type: string
        enum:
        - ossec-analysisd
        - ossec-remoted
        - sca
        - ossec-authd
        - wazuh-db
        - ossec-execd
        - ossec-maild
        - ossec-monitord
        - ossec-logcollector
        - ossec-rootcheck
        - ossec-syscheckd
        - wazuh-modulesd
        - wazuh-modulesd:agent-key-polling
        - wazuh-modulesd:aws-s3
        - wazuh-modulesd:azure-logs
        - wazuh-modulesd:ciscat
        - wazuh-modulesd:command
        - wazuh-modulesd:database
        - wazuh-modulesd:docker-listener
        - wazuh-modulesd:download
        - wazuh-modulesd:oscap
        - wazuh-modulesd:osquery
        - wazuh-modulesd:syscollector
        - wazuh-modulesd:vulnerability-detector
        - ossec-agentlessd
        - ossec-testrule
        - ossec-csyslogd
        - ossec-dbd
        - ossec-integratord
        - ossec-reportd
    type_log:
      in: query
      name: type_log
      description: Filters by log level.
      schema:
        type: string
        enum:
          - all
          - error
          - warning
          - info
          - debug
          - debug2
          - critical
    path:
      in: query
      name: path
      description: Filepath to return.
      required: true
      schema:
        type: string
        format: etc_path
    overwrite:
      in: query
      name: overwrite
      description: If set to false, an exception will be raised when updating contents of an already existing filename.
      schema:
        type: boolean
        default: false
    group:
      in: query
      name: group
      description: Filters by rule group.
      schema:
        type: string
        format: alphanumeric
    level:
      in: query
      name: level
      description: Filters by rule level. Can be a single level (4) or an interval (2-4)
      schema:
        type: string
        format: range
    pci:
      in: query
      name: pci
      description: Filters by PCI requirement name.
      schema:
        type: string
        format: alphanumeric
    gdpr:
      in: query
      name: gdpr
      description: Filters by GDPR requirement.
      schema:
        type: string
        format: alphanumeric
    rule_id:
      in: path
      name: rule_id
      description: Filters by rule ID.
      required: true
      schema:
        type: integer
        format: int32
    rootcheck_status:
      in: query
      name: status
      description: Filter by scan status
      schema:
        type: string
        enum:
        - all
        - outstanding
        - solved
    cis:
      in: query
      name: cis
      description: Filters by CIS requirement.
      schema:
        type: string
        format: alphanumeric
    filetype:
      in: query
      name: type
      description: Filters by file type.
      schema:
        type: string
        enum:
        - file
        - registry
    summary:
      in: query
      name: summary
      description: Returns a summary grouping by filename.
      schema:
        type: boolean
        default: false
    md5:
      in: query
      name: md5
      description: Filters files with the specified MD5 checksum.
      schema:
        type: string
        format: hash
    sha1:
      in: query
      name: sha1
      description: Filters files with the specified SHA1 checksum.
      schema:
        type: string
        format: hash
    sha256:
      in: query
      name: sha256
      description: Filters files with the specified SHA256 checksum.
      schema:
        type: string
        format: hash
    hashfilter:
      in: query
      name: hash
      description: Filters files with the specified hash (md5, sha256 or sha1)
      schema:
        type: string
        enum:
          - md5
          - sha256
          - sha1
    ram_free:
      in: query
      name: ram_free
      description: Filters by ram_free.
      schema:
        type: integer
        format: int64
        minimum: 0
    ram_total:
      in: query
      name: ram_total
      description: Filters by ram_total.
      schema:
        type: integer
        format: int64
        minimum: 0
    cpu_cores:
      in: query
      name: cpu_cores
      description: Filters by cpu_cores.
      schema:
        type: integer
        format: int32
        minimum: 1
    cpu_mhz:
      in: query
      name: cpu_mhz
      description: Filters by cpu_mhz.
      schema:
        type: number
        format: float
        minimum: 1
    cpu_name:
      in: query
      name: cpu_name
      description: Filters by cpu_name.
      schema:
        type: string
        format: alphanumeric
    board_serial:
      in: query
      name: board_serial
      description: Filters by board_serial.
      schema:
        type: string
        format: alphanumeric
    proto:
      in: query
      name: proto
      description: Filters by IP protocol.
      schema:
        type: string
        format: alphanumeric
    address:
      in: query
      name: address
      description: Filters by IP address.
      schema:
        type: string
        format: alphanumeric
    broadcast:
      in: query
      name: broadcast
      description: Filters by broadcast direction.
      schema:
        type: string
        format: alphanumeric
    netmask:
      in: query
      name: netmask
      description: Filters by netmask.
      schema:
        type: string
        format: alphanumeric
    adapter:
      in: query
      name: adapter
      description: Filters by adapter.
      schema:
        type: string
        format: alphanumeric
    state:
      in: query
      name: state
      description: Filters by state.
      schema:
        type: string
        format: alphanumeric
    mtu:
      in: query
      name: mtu
      description: Filters by mtu.
      schema:
        type: integer
        format: int32
        minimum: 0
    tx_packets:
      in: query
      name: tx_packets
      description: Filters by tx_packets.
      schema:
        type: integer
        format: int32
        minimum: 0
    rx_packets:
      in: query
      name: rx_packets
      description: Filters by rx_packets.
      schema:
        type: integer
        format: int32
        minimum: 0
    tx_bytes:
      in: query
      name: tx_bytes
      description: Filters by tx_bytes.
      schema:
        type: integer
        format: int32
        minimum: 0
    rx_bytes:
      in: query
      name: rx_bytes
      description: Filters by rx_bytes.
      schema:
        type: integer
        format: int32
        minimum: 0
    tx_errors:
      in: query
      name: tx_errors
      description: Filters by tx_errors.
      schema:
        type: integer
        format: int32
        minimum: 0
    rx_errors:
      in: query
      name: rx_errors
      description: Filters by rx_errors.
      schema:
        type: integer
        format: int32
        minimum: 0
    tx_dropped:
      in: query
      name: tx_dropped
      description: Filters by tx_dropped.
      schema:
        type: integer
        format: int32
        minimum: 0
    rx_dropped:
      in: query
      name: rx_dropped
      description: Filters by rx_dropped.
      schema:
        type: integer
        format: int32
        minimum: 0
    iface:
      in: query
      name: iface
      description: Filters by network interface.
      schema:
        type: string
        format: alphanumeric
    gateway:
      in: query
      name: gateway
      description: Filters by network gateway.
      schema:
        type: string
        format: alphanumeric
    dhcp:
      in: query
      name: dhcp
      description: Filters by network dhcp (enabled or disabled).
      schema:
        type: string
        enum:
          - enabled
          - disabled
    os_name:
      in: query
      name: os_name
      description: "Filters by os_name. Example: Ubuntu, Windows..."
      schema:
        type: string
        format: alphanumeric
    os_platform:
      in: query
      name: os_platform
      description: Filters by OS platform.
      schema:
        type: string
        format: alphanumeric
    architecture:
      in: query
      name: architecture
      description: Filters by architecture.
      schema:
        type: string
        format: alphanumeric
    os_version:
      in: query
      name: os_version
      description: Filters by os_version.
      schema:
        type: string
        format: alphanumeric
    release:
      in: query
      name: release
      description: Filters by release.
      schema:
        type: string
        format: alphanumeric
    vendor:
      in: query
      name: vendor
      description: Filters by vendor.
      schema:
        type: string
        format: alphanumeric
    pid:
      in: query
      name: pid
      description: Filters by pid.
      schema:
        type: string
        format: numbers
    protocol:
      in: query
      name: protocol
      description: Filters by protocol.
      schema:
        type: string
        format: alphanumeric
    local_ip:
      in: query
      name: local_ip
      description: Filters by Local IP.
      schema:
        type: string
        format: alphanumeric
    local_port:
      in: query
      name: local_port
      description: Filters by Local Port.
      schema:
        type: string
        format: numbers
    remote_ip:
      in: query
      name: remote_ip
      description: Filters by Remote IP.
      schema:
        type: string
        format: alphanumeric
    tx_queue:
      in: query
      name: tx_queue
      description: Filters by tx_queue.
      schema:
        type: string
        format: numbers
    process_pid:
      in: query
      name: process_pid
      description: Filters by process pid.
      schema:
        type: string
        format: numbers
    process_state:
      in: query
      name: process_status
      description: Filters by process state.
      schema:
        type: string
        format: alphanumeric
    ppid:
      in: query
      name: ppid
      description: Filters by process parent pid.
      schema:
        type: string
        format: numbers
    egroup:
      in: query
      name: egroup
      description: Filters by process egroup.
      schema:
        type: string
        format: alphanumeric
    euser:
      in: query
      name: euser
      description: Filters by process euser.
      schema:
        type: string
        format: alphanumeric
    fgroup:
      in: query
      name: fgroup
      description: Filters by process fgroup.
      schema:
        type: string
        format: alphanumeric
    process_name:
      in: query
      name: process_name
      description: Filters by process name.
      schema:
        type: string
        format: alphanumeric
    nlwp:
      in: query
      name: nlwp
      description: Filters by process nlwp.
      schema:
        type: string
        format: numbers
    pgrp:
      in: query
      name: pgrp
      description: Filters by process pgrp.
      schema:
        type: string
        format: numbers
    priority:
      in: query
      name: priority
      description: Filters by process priority.
      schema:
        type: string
        format: numbers
    rgroup:
      in: query
      name: rgroup
      description: Filters by process rgroup.
      schema:
        type: string
        format: alphanumeric
    ruser:
      in: query
      name: ruser
      description: Filters by process ruser.
      schema:
        type: string
        format: alphanumeric
    sgroup:
      in: query
      name: sgroup
      description: Filters by process sgroup.
      schema:
        type: string
        format: alphanumeric
    suser:
      in: query
      name: suser
      description: Filters by process suser.
      schema:
        type: string
        format: alphanumeric
    iface_name:
      in: query
      name: iface_name
      description: Filters by interface name.
      schema:
        type: string
        format: alphanumeric
    package_version:
      in: query
      name: package_version
      description: Filters by version name.
      schema:
        type: string
        format: alphanumeric

tags:
  - name: active-response
    description: 'Agents Active Response'
  - name: agents
    description: 'Agents management related operations'
  - name: ciscat
    description: 'Retrieve information from CIS-CAT scans.'
  - name: cluster
    description: 'Wazuh cluster and nodes management'
  - name: sca
    description: 'Policy monitoring'
  - name: decoders
    description: 'Wazuh decoders management'
  - name: experimental
    description: 'Not ready for production endpoints. Use with caution'
  - name: lists
    description: 'CDB lists'
  - name: login
    description: 'User authentication'
  - name: manager
    description: 'Wazuh manager information, status and logs'
  - name: rootcheck
    description: 'Detection of rootkit, ports and hidden processes and many other scans.'
  - name: rules
    description: 'Wazuh ruleset management'
  - name: syscheck
    description: 'File integrity monitoring.'
  - name: syscollector
    description: 'Capability to collect interesting information for each agent'

#security:
   #- jwt: []

paths:
  /:
    get:
      summary: 'Root-endpoint info'
      description: 'Returns various basic information about the API'
      operationId: api.controllers.default_controller.default_info
      responses:
        '200':
          description: 'API default info'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BasicInfo'
              example:
                title: "Wazuh API"
                api_version: "v4.0.0"
                revision: 4000
                license_name: "GPL 2.0"
                license_url: "https://github.com/wazuh/wazuh/blob/master/LICENSE"
                hostname: "wazuh"
                timestamp: "2019-04-02T08:08:11+0000"
 
  /active-response/{agent_id}:
    put:
      tags:
        - active-response
      summary: 'Run an AR command in the agent'
      description: 'Runs an Active Response command on a specified agent'
      operationId: api.controllers.active_response_controller.active_response
      parameters:
        - $ref: '#/components/parameters/agent_id'

      requestBody:
        content:
          application/json:
              schema:
                properties:
                  command:
                    description: Command running in the agent. If this value starts by `!`, then it refers to a script name instead of a command name.
                    type: string

                  custom:
                    description: Whether the specified command is a custom command or not.
                    type: boolean
                    default: false

                  arguments:
                    description: Command arguments.
                    type: array
                    items:
                      type: string
                required:
                  - command
      responses:
        '200':
          description: 'Command send to agent'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Command sent."
        default:
          $ref: '#/components/responses/ResponseError'

  /agents:
    delete:
      tags:
      - agents
      summary: Delete agents
      description: |
        Removes agents, using a list of them or a criterion based on the status or time of the last connection. The Wazuh API must be restarted after removing an agent.
      operationId: api.controllers.agents_controller.delete_agents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents_ids'
        - $ref: '#/components/parameters/purge'
        - $ref: '#/components/parameters/statusAgentParam'
        - in: query
          name: older_than
          description: |
            Consider only agents which last keep alive is older than the specified time frame. For never connected agents, register date is considered instead of last keep alive. For example, `7d`, `10s` and `10` are valid values. When no time unit is specified, seconds are assumed.
          schema:
            type: string
            format: timeframe
            default: 7d
      responses:
        '200':
          description: Delete agents
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AllItemsAffected'
              example:
                message: All selected agents were removed
                data:
                  affected_agents:
                  - '003'
                  - '005'
                  older_than: 10s
                  total_affected_agents: 2
        default:
          $ref: '#/components/responses/ResponseError'
    get:
      tags:
      - agents
      summary: 'Get all agents'
      description: 'Returns a list with the available agents.'
      operationId: api.controllers.agents_controller.get_all_agents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/statusAgentParam'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/olderThanParam'
        - $ref: '#/components/parameters/os_platform'
        - $ref: '#/components/parameters/os_version'
        - $ref: '#/components/parameters/os_name'
        - $ref: '#/components/parameters/manager_host'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/agent_group'
        - $ref: '#/components/parameters/node_name'
        - $ref: '#/components/parameters/name'
        - in: query
          name: ip
          description: Filters by the IP used by the agent to communicate with the manager. If it's not available, it will have the same value as registerIP.
          schema:
            type: string
            format: alphanumeric
        - in: query
          name: registerIp
          description: Filters by the IP used when registering the agent.
          schema:
            type: string
            format: alphanumeric
      responses:
        '200':
          description: 'List of agents or error description'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Agent'
              example:
                data:
                  totalItems: 7
                  items:
                  - status: Active
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    group:
                    - default
                    name: agent1
                    mergedSum: f1a9e24e02ba4cc5ea80a9d3feb3bb9a
                    ip: 192.168.185.7
                    registerIP: any
                    manager: manager
                    node_name: node02
                    dateAdd: '2018-10-11T09:38:47Z'
                    version: Wazuh v3.8.0
                    lastKeepAlive: '2018-10-11T13:58:08Z'
                    os:
                      major: '16'
                      name: Ubuntu
                      uname: Linux |ubuntu |4.4.0-135-generic |#161-Ubuntu SMP Mon Aug 27 10:45:01
                        UTC 2018 |x86_64
                      platform: ubuntu
                      version: 16.04.5 LTS
                      codename: Xenial Xerus
                      arch: x86_64
                      minor: '04'
                    id: '001'
                  - status: Active
                    name: manager
                    ip: 127.0.0.1
                    registerIP: 127.0.0.1
                    manager: manager
                    node_name: node01
                    dateAdd: '2018-10-11T09:37:23Z'
                    version: Wazuh v3.8.0
                    lastKeepAlive: '9999-12-31T23:59:59Z'
                    os:
                      major: '18'
                      name: Ubuntu
                      uname: Linux |manager |4.15.0-36-generic |#39-Ubuntu SMP Mon Sep 24 16:19:09
                        UTC 2018 |x86_64
                      platform: ubuntu
                      version: 18.04.1 LTS
                      codename: Bionic Beaver
                      arch: x86_64
                      minor: '04'
                    id: '000'
                  - status: Never connected
                    dateAdd: '2018-10-11T13:58:23Z'
                    name: NewHost_2
                    ip: 10.0.10.10
                    registerIP: any
                    id: '123'
                    node_name: unknown
                  - status: Never connected
                    dateAdd: '2018-10-11T13:58:22Z'
                    name: NewHost
                    ip: 10.0.0.9
                    registerIP: 10.0.0.9
                    id: '007'
                    node_name: unknown
                  - status: Never connected
                    dateAdd: '2018-10-11T13:58:10Z'
                    group:
                    - default
                    name: server001
                    ip: 10.0.0.62
                    registerIP: any
                    id: '002'
                    node_name: unknown
        default:
          $ref: '#/components/responses/ResponseError'
    post:
      tags:
      - agents
      summary: 'Add agent'
      description: 'Add a new agent.'
      operationId: api.controllers.agents_controller.add_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'

      requestBody:
        content:
          application/json:
              schema:
                type: object
                properties:
                  name:
                    description: Agent name.
                    type: string
                  ip:
                    description: "If this is not included, the API will get the IP automatically. If you are behind a proxy, you must set the option BehindProxyServer to yes at API configuration. Allowed values: IP, IP/NET, ANY"
                    type: string
                  force_time:
                    description: Remove the old agent with the same IP if disconnected since <force_time> seconds.
                    type: integer
                    minimum: 1
                required:
                - name
      responses:
        '200':
          description: 'Add an agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentIdKey'
              example:
                data:
                  id: "007"
                  key: MDA3IE5ld0hvc3QgMTAuMC4wLjkgZTk5MDE2ZTkzMjMyZDBjZDYyMGIyZTZmMTM2ZjMzMDQxMjY3M2E0NGRmOTNmODk1NzFjMGQyYzczY2VlYzRhZQ==
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}:
    delete:
      tags:
        - agents
      summary: 'Removes an agent'
      description: 'Removes an agent.'
      operationId: api.controllers.agents_controller.delete_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/purge'
      responses:
        '200':
          description: 'Delete agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ItemAffected'
              example:
                message: All selected agents were removed
                data:
                  affected_agents:
                  - '008'
        default:
          $ref: '#/components/responses/ResponseError'
    get:
      tags:
        - agents
      summary: 'Get an agent'
      description: 'Returns various information from an agent.'
      operationId: api.controllers.agents_controller.get_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: 'Get agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Agent'
              example:
                data:
                  configSum: "ab73af41699f13fdd81903b5f23d8d00"
                  dateAdd: '2018-10-11T09:37:23Z'
                  group:
                    - default
                  id: "002"
                  ip: "172.18.0.6"
                  lastKeepAlive: "2019-03-14T11:36:55Z"
                  manager: "9f393e777dfb"
                  mergedSum: "f8d49771911ed9d5c45b03a40babd065"
                  name: "176772c37776"
                  node_name: "worker1"
                  os:
                    arch: "x86_64"
                    codename: "Bionic Beaver"
                    major: "18"
                    minor: "04"
                    name: "Ubuntu"
                    platform: "ubuntu"
                    uname: "Linux |176772c37776 |4.15.0-46-generic |#49~16.04.1-Ubuntu SMP Tue Feb 12 17:45:24 UTC 2019 |x86_64"
                    version: "18.04.2 LTS"
                  registerIP: "172.18.0.6"
                  status: "Active"
                  version: "Wazuh v3.8.2"
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/config/{component}/{configuration}:
    get:
      tags:
        - agents
      summary: 'Get active configuration'
      description: 'Returns the active configuration the agent is currently using. This can be different from the configuration present in the configuration file, if it has been modified and the agent has not been restarted yet.'
      operationId: api.controllers.agents_controller.get_agent_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/component'
        - $ref: '#/components/parameters/configuration'
      responses:
        '200':
          description: 'Get agent configuration'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentConfiguration'
              example:
                data:
                    localfile:
                      - logformat: command
                        command: df -P
                        alias: df -P
                        target:
                          - agent
                        frequency: 360
                      - logformat: full_command
                        command: netstat -tulpn | sed 's/\\([[:alnum:]]\\+\\)\\ \\+[[:digit:]]\\+\\ \\+[[:digit:]]\\+\\ \\+\\(.*\\):\\([[:digit:]]*\\)\\ \\+\\([0-9\\.\\:\\*]\\+\\).\\+\\ \\([[:digit:]]*\\/[[:alnum:]\\-]*\\).*/\\1 \\2 == \\3 == \\4 \\5/' | sort -k 4 -g | sed 's/ == \\(.*\\) ==/:\\1/' | sed 1,2d
                        alias: netstat listening ports
                        target:
                          - agent
                        frequency: 360
                      - logformat: full_command
                        command: last -n 20
                        alias: last -n 20
                        target:
                          - agent
                        frequency: 360
                      - file: /var/ossec/logs/active-responses.log
                        logformat: syslog
                        target:
                          - agent
                      - file: /var/log/auth.log
                        logformat: syslog
                        target:
                          - agent
                      - file: /var/log/syslog
                        logformat: syslog
                        target:
                          - agent
                      - file: /var/log/dpkg.log
                        logformat: syslog
                        target:
                          - agent
                      - file: /var/log/kern.log
                        logformat: syslog
                        target:
                          - agent
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/group:
    delete:
      tags:
        - agents
      summary: 'Remove all agent groups.'
      description: 'Removes the group of the agent. The agent will automatically revert to the "default" group.'
      operationId: api.controllers.agents_controller.delete_agent_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Remove the group of the agent'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Group unset for agent '004'."
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/group/is_sync:
    get:
      tags:
        - agents
      summary: 'Get agent configuration sync status'
      description: 'Returns whether the agent configuration has been synchronized with the agent or not. This can be useful to check after updating a group configuration.'
      operationId: api.controllers.agents_controller.get_sync_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Get agent sync'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        properties:
                          syncef:
                            type: boolean
              example:
                data:
                    synced: false
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/group/{group_id}:
    delete:
      tags:
        - agents
      summary: 'Remove a single group of an agent'
      description: 'Remove the group of the agent but will leave the rest of its group if it belongs to a multigroup.'
      operationId: api.controllers.agents_controller.delete_agent_single_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: 'Remove the group of the agent'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Group 'dmz' unset for agent '004'."
        default:
          $ref: '#/components/responses/ResponseError'

    put:
      tags:
        - agents
      summary: 'Add agent group'
      description: 'Adds an agent to the specified group.'
      operationId: api.controllers.agents_controller.put_agent_single_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/group_id'
        - in: query
          name: force_single_group
          description: Wheter to append new group to current agent's group or replace it.
          schema:
            type: boolean
      responses:
        '200':
          description: 'Add agent to group'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Group '004' already belongs to group 'dmz'."
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/key:
    get:
      tags:
        - agents
      summary: 'Get agent key'
      description: 'Returns the key of an agent.'
      operationId: api.controllers.agents_controller.get_agent_key
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Get agent key'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          key:
                            type: string
                            description: Agent key.
              example:
                data:
                  key: MDA0IG1haW5fZGF0YWJhc2UgMTAuMC4wLjE1IDIzNGM1Y2MzZjhhNzA2OWY2ZGRjN2I0NDc1MWZmNmE1Zjg3MjExMTJiZWJhNmFhMWUyMDIzNWI4MTBjYWNiM2I=
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/restart:
    put:
      tags:
        - agents
      summary: 'Restart an agent'
      description: 'Restarts the specified agent.'
      operationId: api.controllers.agents_controller.put_restart_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Agent restarted'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ItemAffected'
                example:
                  message: All selected agents were restarted
                  data:
                    affected_agents:
                      - "007"
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/upgrade:
    put:
      tags:
        - agents
      summary: 'Upgrade agent using online repository'
      description: 'Upgrade the agent using a WPK file from online repository.'
      operationId: api.controllers.agents_controller.put_upgrade_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - in: query
          name: wpk_repo
          description: WPK repository.
          schema:
            type: string
            format: path
        - $ref: '#/components/parameters/version'
        - in: query
          name: use_http
          description: Use protocol http. If it's false use https. By default the value is set to false.
          schema:
            type: boolean
            default: false
        - in: query
          name: force
          description: Force upgrade.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: 'Agent upgraded'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Upgrade procedure started"
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/upgrade_custom:
    put:
      tags:
        - agents
      summary: 'Upgrade agent using a custom file'
      description: 'Upgrade the agent using a local WPK file.'
      operationId: api.controllers.agents_controller.put_upgrade_custom_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - in: query
          name: file_path
          description: Path to the WPK file. The file must be on a folder on the Wazuh's installation directory (by default, <code>/var/ossec</code>).
          schema:
            type: string
            format: path
        - in: query
          name: installer
          description: Installation script.
          schema:
            type: string
            format: alphanumeric
      responses:
        '200':
          description: 'Agent upgraded'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Installation started"
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_name}:
    put:
      tags:
        - agents
      summary: 'Add agent (quick method)'
      description: 'Adds a new agent with name `agent_name`. This agent will use `any` as IP.'
      operationId: api.controllers.agents_controller.put_new_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_name'
      responses:
        '200':
          description: 'Agent added'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentIdKey'
              example:
                data:
                  id: "008"
                  key: MDA4IG15TmV3QWdlbnQgYW55IDIyNGVmNmI4NjYyMDk5OTc5NzdiZWJhNDRmZTAyNDI0NjU2ZDM1NjhjNWJiZWI4Njk0M2JkMzdjZjA5YjZlM2M=
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/{agent_id}/upgrade_result:
    get:
      tags:
        - agents
      summary: 'Get upgrade result from agent'
      description: 'Returns the upgrade result after updating an agent.'
      operationId: api.controllers.agents_controller.get_agent_upgrade
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - in: query
          name: timeout
          description: Seconds to wait for the agent to respond.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'Get agent upgrade result'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Agent upgraded successfully
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/group/{group_id}:
    delete:
      tags:
        - agents
      summary: 'Remove multiple agents from a specified group.'
      description: 'Remove multiple agents from a specified group.'
      operationId: api.controllers.agents_controller.delete_multiple_agent_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_agents'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: 'Remove the group of multiple agents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ItemAffected'
              example:
                message: All selected agents were removed to group dmz
                data:
                  affected_agents:
                  - '001'
                  - '002'
        default:
          $ref: '#/components/responses/ResponseError'

    post:
      tags:
        - agents
      summary: 'Add multiple agents to a group'
      description: 'Adds multiple agents to the specified group.'
      operationId: api.controllers.agents_controller.post_multiple_agent_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'

      requestBody:
        content:
          application/json:
            schema:
              properties:
                agent_id_list:
                  description: List of agents ID.
                  type: array
                  items:
                    $ref: '#/components/schemas/AgentID'
      responses:
        '200':
          description: 'Add multiple agents to a group'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ItemAffected'
              example:
                message: All selected agents assigned to group dmz
                data:
                  affected_agents:
                  - '001'
                  - '002'
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/groups:
    delete:
      tags:
        - agents
      summary: 'Removes a list of groups'
      description: Removes multiple groups.
      operationId: api.controllers.agents_controller.delete_list_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/list_groups'
      responses:
        '200':
          description: 'Remove multiple group of multiple agents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentGroupDeleted'
              example:
                message: All selected groups were removed
                data:
                  affected_groups:
                  - 'webserver'
                  - 'dataserver'
                  affected_agents:
                  - '002'
                  - '005'
                  - '003'
        default:
          $ref: '#/components/responses/ResponseError'

    get:
      tags:
        - agents
      summary: 'Get all groups'
      description: 'Returns a list containing basic information about each agent group such as number of agents belonging to the group and the checksums of the configuration and shared files.'
      operationId: api.controllers.agents_controller.get_list_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/hash'
      responses:
        '200':
          description: 'List all groups'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/AgentGroup'
              example:
                data:
                  item:
                  - count: 2
                    name: default
                    mergedSum: f8d49771911ed9d5c45b03a40babd065
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                  - count: 3
                    name: dmz
                    mergedSum: 220d6c5fc253f251827ee7487341c0fc
                    configSum: cfbae9ecc10eb15f1b4fc736de6758cc
                  - count: 0
                    name: pciserver
                    mergedSum: 220d6c5fc253f251827ee7487341c0fc
                    configSum: ab73af41699f13fdd81903b5f23d8d00
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/groups/{group_id}:
    delete:
      tags:
        - agents
      summary: 'Remove group'
      description: 'Removes the group. Agents that were assigned to the removed group will automatically revert to the "default" group.'
      operationId: api.controllers.agents_controller.delete_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: 'Remove a group and revert agents to default group'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentGroupDeleted'
              example:
                message: All selected groups were removed
                data:
                  affected_groups:
                  - 'dmz'
                  affected_agents:
                  - '001'
                  - '002'
        default:
          $ref: '#/components/responses/ResponseError'

    get:
      tags:
        - agents
      summary: 'Get agents in a group'
      description: 'Returns the list of agents that belongs to the specified group.'
      operationId: api.controllers.agents_controller.get_agent_in_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/statusAgentParam'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'List of agents or error description'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Agent'
              example:
                data:
                  totalItems: 3
                  items:
                  - os:
                      arch: x86_64
                      codename: Bionic Beaver
                      major: '18'
                      minor: '04'
                      name: Ubuntu
                      platform: ubuntu
                      uname: Linux |agent-1 |4.15.0-43-generic |#46-Ubuntu SMP Thu Dec 6 14:45:28 UTC 2018 |x86_64
                      version: 18.04.1 LTS
                    group:
                      - default
                      - dmz
                    lastKeepAlive: '2019-02-19T10:31:09Z'
                    ip: 172.17.0.201
                    manager: manager
                    status: Active
                    version: Wazuh v3.8.2
                    dateAdd: '2019-02-19T10:25:42Z'
                    name: agent-1
                    configSum: ab73af41699f13fdd81903b5f23d8d00
                    registerIP: 172.17.0.201
                    node_name: node01
                    id: '001'
                    mergedSum: f8d49771911ed9d5c45b03a40babd065
                  - group:
                    - default
                    - dmz
                    status: Never connected
                    dateAdd: '2019-02-19T10:30:59Z'
                    name: server001
                    registerIP: 10.0.0.62
                    ip: 10.0.0.62
                    node_name: unknown
                    id: '002'
                  - group:
                    - dmz
                    ip: 10.0.0.15
                    status: Never connected
                    dateAdd: '2019-02-19T10:31:00Z'
                    name: main_database
                    registerIP: 10.0.0.15
                    node_name: unknown
                    id: '004'
        default:
          $ref: '#/components/responses/ResponseError'

    put:
      tags:
        - agents
      summary: 'Create a group'
      description: 'Creates a new group.'
      operationId: api.controllers.agents_controller.put_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
      responses:
        '200':
          description: 'Add new agent'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Group 'pciserver' created"
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/groups/{group_id}/configuration:
    get:
      tags:
        - agents
      summary: 'Get group configuration'
      description: 'Returns the group configuration defined in the `agent.conf` file.'
      operationId: api.controllers.agents_controller.get_group_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: 'Get group configuration'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/GroupConfiguration'
              example:
                data:
                  totalItems: 1
                  items:
                  - filters:
                      os: Linux
                  - config:
                      localfile:
                      - location: /var/log/linux.log
                      - log_format: syslog
        default:
          $ref: '#/components/responses/ResponseError'

    post:
      tags:
        - agents
      summary: 'Update group configuration'
      description: Update an specified group's configuration. This API call expects a full valid XML file with the shared configuration tags/syntax.
      operationId: api.controllers.agents_controller.post_group_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'

      requestBody:
        required: true
        content:
          application/xml:
            schema:
              properties:
                tmp_file:
                  description: Updated file
                  type: string

      responses:
        '200':
          description: 'Upload configuration'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Agent configuration was updated successfully
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/groups/{group_id}/files:
    get:
      tags:
        - agents
      summary: 'Get group files'
      description: 'Return the files placed under the group directory.'
      operationId: api.controllers.agents_controller.get_group_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/hash'
      responses:
        '200':
          description: 'Get group files'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                properties:
                                  filename:
                                    type: string
                                  hash:
                                    type: string
              example:
                data:
                  totalItems: 24
                  items:
                    - filename: agent.conf
                      hash: ab73af41699f13fdd81903b5f23d8d00
                    - filename: ar.conf
                      hash: 76d8be9b97d8eae4c239e530ee7e71c8
                    - filename: cis_apache2224_rcl.txt
                      hash: 3c2469443a08b01c454ca35558cb9fa6
                    - filename: cis_debian_linux_rcl.txt
                      hash: cc12fdba595817758f308024f61acb71
                    - filename: cis_mysql5-6_community_rcl.txt
                      hash: f5f770160baf596373e4f77f987cc422
                    - filename: cis_mysql5-6_enterprise_rcl.txt
                      hash: de9865c809f1555d537e5a49872eaf4c
                    - filename: cis_rhel5_linux_rcl.txt
                      hash: a3af38b3f81a48332c7bcd9cf8aa6eff
                    - filename: cis_rhel6_linux_rcl.txt
                      hash: bdcfa3ab90b553f8e5c84cfa9fd90289
                    - filename: cis_rhel7_linux_rcl.txt
                      hash: 039e579029e3edcf8241fb391f46b12f
                    - filename: cis_rhel_linux_rcl.txt
                      hash: 569cd8a2cc7527cc75f81f77098de461
                    - filename: cis_sles11_linux_rcl.txt,
                      hash: d86ee36d384930293cbcc83c8fb57c93
                    - filename: cis_sles12_linux_rcl.txt
                      hash: 6f58710fa8eef659dc782a3fa4699e33
                    - filename: cis_win2012r2_domainL1_rcl.txt
                      hash: 8819dfa3523933b113e27a85fc9e568d
                    - filename: cis_win2012r2_domainL2_rcl.txt
                      hash: e8a2c7ab57bc8102b237f061b8f82dce
                    - filename: cis_win2012r2_memberL1_rcl.txt
                      hash: 38c88156d03af9372efd620e6e57d473
                    - filename: cis_win2012r2_memberL2_rcl.txt
                      hash: c4b62b3e01b5f5634a9719eb8a104028
                    - filename: merged.mg
                      hash: f8d49771911ed9d5c45b03a40babd065
                    - filename: rootkit_files.txt
                      hash: e5ddcac443143cef6237d5f9b8d48585
                    - filename:  rootkit_trojans.txt
                      hash: 6bcf7016d3e6b4c7faa62cf265c24dcc
                    - filename: system_audit_rcl.txt
                      hash: be69b84dd5ee73200bb903a46270e18c
                    - filename: system_audit_ssh.txt
                      hash: 407c1f5e103f0cb58249eb7252a84797
                    - filename: win_applications_rcl.txt
                      hash: 0a4ad12c8145aca8a28d31de5c448b48
                    - filename: win_audit_rcl.txt
                      hash: 92d8011facc8b921ece301ea4ce6a616
                    - filename: win_malware_rcl.txt
                      hash: 6a8d3c63a0e77dea35aaed3ee2cca3a1
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/groups/{group_id}/files/{file_name}:
    get:
      tags:
        - agents
      summary: 'Get a file in group'
      description: 'Returns the contents of the specified group file parsed to JSON.'
      operationId: api.controllers.agents_controller.get_group_file
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/file_name'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: 'Get group file'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          description: "The output format depends on the type of file that has been requested: rootkit file, rootkit trojans or rcl."
              example:
                data:
                  vars:
                  controls:
                    - condition: all required
                      name: CIS - Testing against the CIS Debian Linux Benchmark v1
                      reference: CIS_Debian_Benchmark_v1.0pdf
                      checks:
                        - f:/etc/debian_version
                    - name: "CIS - Debian Linux - 1.4 - Robust partition scheme - /tmp is not on its own partition"
                      condition: "any"
                      reference: "https://benchmarks.cisecurity.org/tools2/linux/CIS_Debian_Benchmark_v1.0.pdf"
                      checks:
                        - "f:/etc/fstab -> !r:/tmp;"
        default:
          $ref: '#/components/responses/ResponseError'

    post:
      tags:
        - agents
      summary: 'Upload file into a group'
      operationId: api.controllers.agents_controller.post_group_file
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/group_id'
        - $ref: '#/components/parameters/file_name'

      requestBody:
        required: true
        content:
          application/xml:
            schema:
              properties:
                tmp_file:
                  description: Updated file
                  type: string

      responses:
        '200':
          description: 'Post group file'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Agent configuration was updated successfully
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/insert:
    post:
      tags:
        - agents
      summary: 'Add an agent specifying all its basic properties'
      description: 'Adds an agent specifying its name, ID and IP. If an agent with the same ID already exists, replace it using `force` parameter.'
      operationId: api.controllers.agents_controller.insert_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      requestBody:
        content:
          application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/AgentID'
                  key:
                    type: string
                    maxLength: 64
                    minLength: 64
                    format: wazuh_key
                    description: Key to use when communicating with the manager. The agent must have the same key on its `client.keys` file.
                  name:
                    description: Agent name.
                    type: string
                    format: names
                  ip:
                    description: "If this is not included, the API will get the IP automatically. If you are behind a proxy, you must set the option config.BehindProxyServer to yes at config.js. Allowed values: IP, IP/NET, ANY"
                    type: string
                    format: alphanumeric
                  force_time:
                    description: Remove the old agent with the same IP if disconnected since <force_time> seconds.
                    type: integer
                    format: int32
                required:
                  - name
              example:
                name: NewHost_2
                ip: 10.0.10.10
                id: 123
                key: 1abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghi64
      responses:
        '200':
          description: 'Get group file'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AgentIdKey'
              example:
                data:
                  id: 123
                  key: MTIzIE5ld0hvc3RfMiAxMC4wLjEwLjEwIDFhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5emFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6YWJjZGVmZ2hpNjQ=
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/name/{agent_name}:
    get:
      tags:
        - agents
      summary: 'Get an agent by its name'
      description: 'Returns various information from an agent called :agent_name.'
      operationId: api.controllers.agents_controller.get_agent_by_name
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_name'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: 'Get agent'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Agent'
              example:
                data:
                  ip: 10.0.0.9
                  status: Never connected
                  dateAdd: "2019-02-19T10:31:12Z"
                  name: NewHost
                  registerIP: 10.0.0.9
                  node_name: unknown
                  id: "007"
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/no_group:
    get:
      tags:
        - agents
      summary: 'Get agents without group'
      description: 'Returns a list with the available agents without group.'
      operationId: api.controllers.agents_controller.get_agent_no_group
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'Get agents without group'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Agent'
              example:
                data:
                  totalItems: 3
                  items:
                    - ip: 10.0.0.20
                      status: Never connected
                      dateAdd: "2019-02-19T10:31:00Z"
                      name: server002
                      registerIP: 10.0.0.20
                      node_name: unknown
                      id: "006"
                    - ip: 10.0.0.9
                      status: Never connected
                      dateAdd: "2019-02-19T10:31:12Z"
                      name: NewHost
                      registerIP: 10.0.0.9
                      node_name: unknown
                      id: "007"
                    - ip: 10.0.10.10
                      status: Never connected
                      dateAdd: "2019-02-19T10:31:13Z"
                      name: NewHost_2
                      registerIP: 10.0.10.10
                      node_name: unknown
                      id: "123"
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/outdated:
    get:
      tags:
        - agents
      summary: 'Get outdated agents'
      description: 'Returns the list of outdated agents.'
      operationId: api.controllers.agents_controller.get_agent_outdated
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'Get outdated agents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/AgentSimple'
              example:
                data:
                  totalItems: 2
                  items:
                    - version: Wazuh v3.0.0
                      id: "003"
                      name: main_database
                    - version: Wazuh v3.0.0
                      id: "004"
                      name: dmz002
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/restart:
    post:
      tags:
      - agents
      summary: 'Restart a list of agents'
      operationId: api.controllers.agents_controller.restart_list_agents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'

      requestBody:
        content:
          application/json:
            schema:
              properties:
                ids:
                  description: Array of agent ID's.
                  type: array
                  items:
                    type: string

      responses:
        '200':
          description: Agents restarted
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ItemAffected'
                example:
                  message: All selected agents were restarted
                  data:
                    affected_agents:
                    - '002'
                    - '004'
        default:
          $ref: '#/components/responses/ResponseError'

    put:
      tags:
      - agents
      summary: 'Restarts all agents'
      operationId: api.controllers.agents_controller.restart_all_agents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Agents restarted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Restarting all agents"
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/stats/distinct:
    get:
      tags:
        - agents
      summary: 'Get distinct fields in agents'
      description: 'Returns all the different combinations that agents have for the selected fields. It also indicates the total number of agents that have each combination.'
      operationId: api.controllers.agents_controller.get_agent_fields
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'Get fields in agents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                properties:
                                  os:
                                    properties:
                                      platform:
                                        type: string
                                        nullable: true
                                      version:
                                        type: string
                                        nullable: true
                                      name:
                                        type: string
                                        nullable: true
                                  count:
                                    type: integer
              example:
                data:
                  totalItems: 7
                  items:
                    - os:
                        platform: ubuntu
                      count: 2
                    - count: 5
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/summary:
    get:
      tags:
        - agents
      summary: 'Get agents summary'
      description: 'Returns a summary of the available agents.'
      operationId: api.controllers.agents_controller.get_agent_summary
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Get summary of agents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      properties:
                        Total:
                          type: integer
                        Active:
                          type: integer
                        Disconnected:
                          type: integer
                        Never connected:
                          type: integer
                        Pending:
                          type: integer
              example:
                data:
                  Total: 7
                  Active: 2
                  Disconnected: 0
                  Never connected: 5
                  Pending: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /agents/summary/os:
    get:
      tags:
        - agents
      summary: 'Get OS summary'
      description: 'Returns a summary of the OS.'
      operationId: api.controllers.agents_controller.get_agent_summary_os
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'Get summary of agents OS'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              description: List of Operating system platforms.
                              type: array
                              items:
                                type: string
              example:
                data:
                  totalItems: 1
                  items:
                    - ubuntu
        default:
          $ref: '#/components/responses/ResponseError'

  /ciscat/{agent_id}/results:
    get:
      tags:
      - ciscat
      summary: 'Get CIS-CAT results from an agent'
      description: "Returns the agent's ciscat results info."
      operationId: api.controllers.ciscat_controller.get_agents_cistat_results
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/benchmark'
        - $ref: '#/components/parameters/profile'
        - $ref: '#/components/parameters/pass'
        - $ref: '#/components/parameters/fail'
        - $ref: '#/components/parameters/error'
        - $ref: '#/components/parameters/notchecked'
        - $ref: '#/components/parameters/unknown'
        - $ref: '#/components/parameters/score'

      responses:
        '200':
          description: 'List of agents or error description'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/CiscatResults'
              example:
                data:
                  totalItems: 2
                  items:
                  - profile: xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server
                    score: 57
                    error: 0
                    scan:
                      id: 1406741147
                      time: "2018-09-06T07:50:15.632Z"
                    fail: 79
                    benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                    pass: 104
                    notchecked: 36
                    unknown: 1
                  - profile: xccdf_org.cisecurity.benchmarks_profile_Level_1_-_Workstation
                    score: 64
                    error: 0
                    scan:
                      id: 1406741147
                      time: "2018-09-06T07:50:52.630Z"
                    fail: 53
                    benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                    pass: 96
                    notchecked: 71
                    unknown: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/node:
    get:
      tags:
      - cluster
      summary: Get information about the local node.
      description: Returns basic information about the cluster node receiving the request.
      operationId: api.controllers.cluster_controller.get_cluster_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Node basic information'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      properties:
                        node:
                          description: Node name.
                          type: string
                        cluster:
                          description: Cluster name the node belongs to.
                          type: string
                        type:
                          description: Node type.
                          type: string
              example:
                data:
                  node: "node02"
                  cluster: "wazuh"
                  type: "worker"
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/nodes:
    get:
      tags:
      - cluster
      summary: Get information about all nodes in the cluster.
      description: Returns a list containing all connected nodes in the cluster.
      operationId: api.controllers.cluster_controller.get_cluster_nodes
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/node_type'
      responses:
        '200':
          description: 'List of connected nodes'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/ClusterNode'
              example:
                data:
                  totalItems: 2
                  items:
                    - name: "node02"
                      type: "worker"
                      version: "3.9.0"
                      ip: "172.17.0.101"
                    - name: "node01"
                      type: "master"
                      version: "3.9.0"
                      ip: "172.17.0.100"
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/nodes/{node_id}:
    get:
      tags:
      - cluster
      summary: Get information about a specified node.
      description: Returns information about a specified node in the cluster.
      operationId: api.controllers.cluster_controller.get_cluster_node_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Node information'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ClusterNode'
              example:
                data:
                  name: "node02"
                  type: "worker"
                  version: "3.9.0"
                  ip: "172.17.0.101"
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/healthcheck:
    get:
      tags:
      - cluster
      summary: Show cluster healthcheck
      description: Returns cluster healthcheck information such as last keep alive, last synchronization time and number of agents reporting on each node.
      operationId: api.controllers.cluster_controller.get_healthcheck
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Health information
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Healthcheck'
              example:
                data:
                  totalItems: 2
                  items:
                    - name: "node01"
                      info:
                        ip: "172.17.0.100"
                        version: "3.9.0"
                        type: "master"
                        totalActiveAgents: 2
                    - name: "node02"
                      info:
                        ip: "172.17.0.101"
                        version: "3.9.0"
                        type: "worker"
                        totalActiveAgents: 5
                      status:
                        - type: "Agent status"
                          date_start: "2019-01-11T18:52:57.72Z"
                          date_end: "2019-01-11 18:52:57.73"
                          synchronized_files: 4
                          free: true
                        - type: "Extra valid"
                          date_start: "2019-01-11T18:52:57.72Z"
                          date_end: "2019-01-11T18:52:57.73Z"
                          synchronized_files: 4
                          free: true
                        - type: "Integrity"
                          date_start: "2019-01-11T18:52:57.72Z"
                          date_end: "2019-01-11T18:52:57.73Z"
                          synchronized_files:
                            shared: 5
                            missing: 4
                            extra_valid: 0
                            extra: 0
                          free: true
                        - type: "Last keep alive"
                          date_start: "2019-01-11T18:52:57.72Z"
                          date_end: "2019-01-11T18:52:57.73Z"
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/healthcheck/{node_id}:
    get:
      tags:
      - cluster
      summary: Show a specified node's healthcheck information
      description: Returns cluster healthcheck information of an specified node.
      operationId: api.controllers.cluster_controller.get_healthcheck_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: Node health information
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Healthcheck'
              example:
                data:
                  info:
                    ip: "172.17.0.101"
                    version: "3.9.0"
                    type: "worker"
                    totalActiveAgents: 5
                  status:
                    - type: "Agent status"
                      date_start: "2019-01-11 18:52:57.72"
                      date_end: "2019-01-11 18:52:57.73"
                      synchronized_files: 4
                      free: true
                    - type: "Extra valid"
                      date_start: "2019-01-11 18:52:57.72"
                      date_end: "2019-01-11 18:52:57.73"
                      synchronized_files: 4
                      free: true
                    - type: "Integrity"
                      date_start: "2019-01-11 18:52:57.72"
                      date_end: "2019-01-11 18:52:57.73"
                      synchronized_files:
                        shared: 5
                        missing: 4
                        extra_valid: 0
                        extra: 0
                      free: true
                    - type: "Last keep alive"
                      date_start: "2019-01-11 18:52:57.72"
                      date_end: "2019-01-11 18:52:57.73"
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/status:
    get:
      tags:
      - cluster
      summary: Get cluster status
      description: Returns information about the cluster status.
      operationId: api.controllers.cluster_controller.get_status
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Cluster status'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      properties:
                        enabled:
                          description: Whether the cluster is enabled in the Wazuh configuration.
                          type: string
                          enum:
                          - yes
                          - no
                        running:
                          description: Whether the cluster daemon is running.
                          type: string
                          enum:
                          - yes
                          - no
              example:
                data:
                  enabled: yes
                  running: yes
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/config:
    get:
      tags:
      - cluster
      summary: Get cluster configuration
      description: Returns the current cluster configuration
      operationId: api.controllers.cluster_controller.get_config
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Cluster configuration
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      properties:
                        name:
                          description: Cluster name.
                          type: string
                        node_name:
                          description: Node name.
                          type: string
                        node_type:
                          description: Node type.
                          type: string
                          enum:
                          - master
                          - worker
                        key:
                          description: Cluster key used to encrypt messages.
                          type: string
                        port:
                          description: Port used by the **master** node to communicate with workers.
                          type: integer
                        bind_addr:
                          description: Network interface used by the **master** to listen to incoming connections.
                          type: string
                        nodes:
                          description: List of cluster master nodes. This list is used by **worker** nodes to connect to the master.
                          type: array
                          items:
                            type: string
                        hidden:
                          description: Whether to hide the cluster information in the alerts.
                          type: string
                        disabled:
                          description: Whether the cluster is enabled or not.
                          type: boolean
              example:
                data:
                  name: wazuh
                  node_name: node02
                  node_type: worker
                  key: 9d273b53510fef702b54a92e9cffc82e
                  port: 1516
                  bind_addr: 0.0.0.0
                  nodes:
                    - 172.17.0.100
                  hidden: no
                  disabled: false
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/status:
    get:
      tags:
      - cluster
      summary: Get a specified node's status
      description: Returns the status of all Wazuh daemons in node node_id
      operationId: api.controllers.cluster_controller.get_status_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Node wazuh daemons statuses'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhDaemonsStatus'
              example:
                data:
                  ossec-agentlessd: stopped
                  ossec-analysisd: running
                  ossec-authd: stopped
                  ossec-csyslogd: stopped
                  ossec-dbd: stopped
                  ossec-monitord: running
                  ossec-execd: running
                  ossec-integratord: stopped
                  ossec-logcollector: running
                  ossec-maild: stopped
                  ossec-remoted: running
                  ossec-reportd: stopped
                  ossec-syscheckd: running
                  wazuh-clusterd: running
                  wazuh-modulesd: running
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/info:
    get:
      tags:
      - cluster
      summary: Get a specified node's information
      description: Returns basic information about a specified node such as version, compilation date, installation path.
      operationId: api.controllers.cluster_controller.get_info_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Node information'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhInfo'
              example:
                data:
                  path: /var/ossec
                  version: v3.9.0
                  compilation_date: "2019-03-06T11:24:59Z"
                  type: manager
                  max_agents: 14000
                  openssl_support: yes
                  ruleset_version: 3905
                  tz_offset: +0000
                  tz_name: UTC
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/configuration:
    get:
      tags:
      - cluster
      summary: Get a specified node's configuration
      description: Returns wazuh configuration used in node {node_id}
      operationId: api.controllers.cluster_controller.get_configuration_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/section'
        - $ref: '#/components/parameters/field'
      responses:
        '200':
          description: 'Node configuration'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhConfiguration'
              example:
                data:
                  global:
                    jsonout_output: yes
                    alerts_log: yes
                    logall: no
                    logall_json: no
                    email_notification: no
                    smtp_server: smtp.example.wazuh.com
                    email_from: ossecm@example.wazuh.com
                    email_to: recipient@example.wazuh.com
                    email_maxperhour: 12
                    email_log_source: alerts.log
                    queue_size: 131072
                    white_list:
                      - 127.0.0.1
                      - ^localhost.localdomain$
                      - 127.0.0.53
                  alerts:
                    log_alert_level: "3"
                    email_alert_level: "12"
                  cis-cat:
                    disabled: yes
                    timeout: 1800
                    interval: 1d
                    scan-on-start: yes
                    java_path: wodles/java
                    ciscat_path: wodles/ciscat
                  command:
                    - name: disable-account
                      executable: disable-account.sh
                      expect: user
                      timeout_allowed: yes
                    - name: restart-ossec
                      executable: restart-ossec.sh
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/stats:
    get:
      tags:
      - cluster
      summary: Get a specified node's stats.
      description: Returns Wazuh statistical information in node {node_id} for the current or specified date.
      operationId: api.controllers.cluster_controller.get_stats_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/date'
      responses:
        '200':
          description: 'Wazuh node stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhStats'
              example:
                data:
                  - hour: 15
                    alerts:
                      - sigid: 5303
                        level: 3
                        times: 1
                      - sigid: 5501
                        level: 3
                        times: 4
                      - sigid: 221
                        level: 0
                        times: 653
                    totalAlerts: 658
                    events: 4387
                    firewall: 0
                  - hour: 16
                    alerts:
                      - sigid: 5521
                        level: 0
                        times: 1
                      - sigid: 530
                        level: 0
                        times: 120
                    totalAlerts: 121
                    events: 4379
                    syscheck: 0
                    firewall: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/stats/hourly:
    get:
      tags:
      - cluster
      summary: Get a specified node's stats by hour.
      description: Returns Wazuh statistical information in node {node_id} per hour. Each number in the averages field represents the average of alerts per hour.
      operationId: api.controllers.cluster_controller.get_stats_hourly_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node hourly stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhHourlyStats'
              example:
                data:
                  averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                  interactions: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/stats/weekly:
    get:
      tags:
      - cluster
      summary: Get a specified node's stats by week.
      description: Returns Wazuh statistical information in node {node_id} per week. Each number in the averages field represents the average of alerts per hour for that specific day.
      operationId: api.controllers.cluster_controller.get_stats_weekly_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node weekly stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhWeeklyStats'
              example:
                data:
                  Sun:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Mon:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Tue:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Wed:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Thu:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Fri:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Sat:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/stats/analysisd:
    get:
      tags:
      - cluster
      summary: Get a specified node's analysisd stats.
      description: Returns Wazuh analysisd statistical information in node {node_id}.
      operationId: api.controllers.cluster_controller.get_stats_analysisd_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node analysisd stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhAnalysisdStats'
              example:
                data:
                  total_events_decoded: 5
                  syscheck_events_decoded: 0
                  syscheck_edps: 0
                  syscollector_events_decoded: 0
                  syscollector_edps: 0
                  rootcheck_events_decoded: 0
                  rootcheck_edps: 0
                  sca_events_decoded: 0
                  sca_edps: 0
                  hostinfo_events_decoded: 0
                  hostinfo_edps: 0
                  winevt_events_decoded: 0
                  winevt_edps: 0
                  other_events_decoded: 5
                  other_events_edps: 1
                  events_processed: 5
                  events_edps: 1
                  events_received: 5
                  events_dropped: 0
                  alerts_written: 0
                  firewall_written: 0
                  fts_written: 0
                  syscheck_queue_usage: 0
                  syscheck_queue_size: 16384
                  syscollector_queue_usage: 0
                  syscollector_queue_size: 16384
                  rootcheck_queue_usage: 0
                  rootcheck_queue_size: 16384
                  sca_queue_usage: 0
                  sca_queue_size: 16384
                  hostinfo_queue_usage: 0
                  hostinfo_queue_size: 16384
                  winevt_queue_usage: 0
                  winevt_queue_size: 16384
                  event_queue_usage: 0
                  event_queue_size: 16384
                  rule_matching_queue_usage: 0
                  rule_matching_queue_size: 16384
                  alerts_queue_usage: 0
                  alerts_queue_size: 16384
                  firewall_queue_usage: 0
                  firewall_queue_size: 16384
                  statistical_queue_usage: 0
                  statistical_queue_size: 16384
                  archives_queue_usage: 0
                  archives_queue_size: 16384
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/stats/remoted:
    get:
      tags:
      - cluster
      summary: Get a specified node's remoted stats.
      description: Returns Wazuh remoted statistical information in node {node_id}.
      operationId: api.controllers.cluster_controller.get_stats_remoted_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node remoted stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhRemotedStats'
              example:
                data:
                  queue_size: 0
                  total_queue_size: 131072
                  tcp_sessions: 0
                  evt_count: 0
                  ctrl_msg_count: 0
                  discarded_count: 0
                  msg_sent: 0
                  recv_bytes: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/logs:
    get:
      tags:
      - cluster
      summary: Get a specified node's wazuh logs.
      description: Returns the last 2000 wazuh log entries in node {node_id}.
      operationId: api.controllers.cluster_controller.get_log_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/category'
        - $ref: '#/components/parameters/type_log'
      responses:
        '200':
          description: 'Wazuh node logs'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/WazuhLogs'
              example:
                data:
                  totalItems: 3
                  items:
                    - timestamp: "2019-03-07T11:21:17Z"
                      tag: ossec-syscheckd
                      level: info
                      description: "Syscheck scan frequency: 43200 seconds"
                    - timestamp: "2019-03-07T11:21:17Z"
                      tag: ossec-syscheckd
                      level: info
                      description: Starting syscheck scan.
                    - timestamp: "2019-03-07T11:21:17Z"
                      tag: ossec-rootcheck
                      level: info
                      description: Starting rootcheck scan.
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/logs/summary:
    get:
      tags:
      - cluster
      summary: Get a summary of a specified node's wazuh logs.
      description: Returns a summary of the last 2000 wazuh log entries in node {node_id}.
      operationId: api.controllers.cluster_controller.get_log_summary_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Wazuh node logs summary'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhLogsSummary'
              example:
                data:
                  wazuh-modulesd:
                    info: 2
                    all: 2
                    critical: 0
                    debug: 0
                    error: 0
                    warning: 0
                  wazuh-db:
                    info: 1
                    all: 4
                    critical: 0
                    debug: 0
                    error: 3
                    warning: 0
                  ossec-rootcheck:
                    info: 8
                    all: 8
                    critical: 0
                    debug: 0
                    error: 0
                    warning: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/files:
    get:
      tags:
      - cluster
      summary: Get file contents from a specified node in the cluster.
      description: Returns file contents from any file in cluster node {node_id}.
      operationId: api.controllers.cluster_controller.get_files_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/path'
      responses:
        '200':
          description: 'File contents'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        contents:
                          description: File contents.
                          type: string
              example:
                data:
                  contents: "<!-- Local rules -->\n\n<!-- Modify it at your will. -->\n<!-- Copyright (C) 2015-2019, Wazuh Inc. -->\n\n<!-- Example -->\n<group name=\"local,syslog,sshd,\">\n\n  <!--\n  Dec 10 01:02:02 host sshd[1234]: Failed none for root from 1.1.1.1 port 1066 ssh2\n -->\n  <rule id=\"100001\" level=\"5\">\n    <if_sid>5716</if_sid>\n    <srcip>1.1.1.1</srcip>\n    <description>sshd: authentication failed from IP 1.1.1.1.</description>\n    <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\n  </rule>\n\n</group>\n"
        default:
          $ref: '#/components/responses/ResponseError'

    post:
      tags:
      - cluster
      summary: Updates file contents in a specified cluster node.
      description: Replaces file contents with the data contained in the API request in a specified cluster node.
      operationId: api.controllers.cluster_controller.post_files_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/path'
        - $ref: '#/components/parameters/overwrite'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: File updated successfully.
        default:
          $ref: '#/components/responses/ResponseError'

    delete:
      tags:
      - cluster
      summary: Removes a file in a specified cluster node.
      description: Removes a specified file in the node {node-id}.
      operationId: api.controllers.cluster_controller.delete_files_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
        - $ref: '#/components/parameters/path'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: File was deleted.
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/restart:
    put:
      tags:
      - cluster
      summary: Restarts all nodes in cluster.
      description: Restarts all nodes in cluster.
      operationId: api.controllers.cluster_controller.put_restart
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Restarting cluster.
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/{node_id}/restart:
    put:
      tags:
      - cluster
      summary: Restarts a specific node in cluster.
      description: Restarts a specific node in cluster.
      operationId: api.controllers.cluster_controller.put_restart_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Restarting manager.
        default:
          $ref: '#/components/responses/ResponseError'

  /cluster/configuration/validation:
    get:
      tags:
      - cluster
      summary: Check Wazuh configuration in all cluster nodes.
      description: Returns wether the Wazuh configuration in all cluster nodes is correct.
      operationId: api.controllers.cluster_controller.get_conf_validation
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Configuration is OK'

        '400':
          description: 'Error in configuration'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiError'
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
              example:
                type: "about:blank"
                title: "Bad configuration"
                detail: "Wazuh configuration has not been properly set"
                errors:
                  - "(1230): Invalid element in the configuration: 'hello'."
                  - "(1202): Configuration error at '/var/ossec/etc/ossec.conf'."
        default:
          $ref: '#/components/responses/ResponseError'


  /cluster/{node_id}/configuration/validation:
    get:
      tags:
      - cluster
      summary: Check Wazuh configuration in a cluster node
      description: Returns wether the Wazuh configuration in node {node_id} is correct.
      operationId: api.controllers.cluster_controller.get_conf_validation_node
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/node_id'
      responses:
        '200':
          description: 'Configuration is OK'

        '400':
          description: 'Error in configuration'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiError'
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
              example:
                type: "about:blank"
                title: "Bad configuration"
                detail: "Wazuh configuration has not been properly set"
                errors:
                  - "(1230): Invalid element in the configuration: 'hello'."
                  - "(1202): Configuration error at '/var/ossec/etc/ossec.conf'."
        default:
          $ref: '#/components/responses/ResponseError'

  /lists:
    get:
      tags:
      - lists
      summary: 'Get all CDB lists'
      description: 'Returns the contents of all CDB lists. Optionally, the result can be filtered by several criteria. See available parameters for more details.'
      operationId: api.controllers.lists_controller.get_lists
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/statusRLDParam'
        - $ref: '#/components/parameters/pathFilter'
      responses:
        '200':
          description: 'Successfully got CDB lists'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/CDBList'
              example:
                data:
                  totalItems: 2
                  items:
                    - path: etc/lists/amazon/aws-eventnames
                      items:
                      - key: AttachLoadBalancers
                        value: Autoscaling
                      - key: TerminateInstanceInAutoScalingGroup
                        value: Autoscaling
                      - key: CreateStack
                        value: Cloudformation
                    - path: etc/lists/audit-keys
                      items:
                      - key: audit-wazuh-w
                        value: write
                      - key: audit-wazuh-a
                        value: attribute
        default:
          $ref: '#/components/responses/ResponseError'


  /lists/files:
    get:
      tags:
      - lists
      summary: 'Get paths from all lists'
      description: 'Returns the path from all lists. Use this method to know all the CDB lists and their location in the filesystem relative to Wazuh installation folder'
      operationId: api.controllers.lists_controller.get_lists_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Successfully got all CDB lists and the files where are defined'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    description: Name of the CDB list file.
                                    type: string
                                  path:
                                    description: Path where the CDB list file is stored. This path is relative to the Wazuh installation path.
                                    type: string
                example:
                  data:
                    totalItems: 2
                    items:
                      - name: security-eventchannel
                        path: etc/lists
                      - name: aws-sources
                        path: etc/lists/amazon
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/status:
    get:
      tags:
      - manager
      summary: Get the Wazuh manager status
      description: Returns the status of all Wazuh daemons
      operationId: api.controllers.manager_controller.get_status
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh manager daemons statuses'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhDaemonsStatus'
              example:
                data:
                  ossec-agentlessd: stopped
                  ossec-analysisd: running
                  ossec-authd: stopped
                  ossec-csyslogd: stopped
                  ossec-dbd: stopped
                  ossec-monitord: running
                  ossec-execd: running
                  ossec-integratord: stopped
                  ossec-logcollector: running
                  ossec-maild: stopped
                  ossec-remoted: running
                  ossec-reportd: stopped
                  ossec-syscheckd: running
                  wazuh-clusterd: running
                  wazuh-modulesd: running
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/info:
    get:
      tags:
      - manager
      summary: Get Wazuh manager information
      description: Returns basic information such as version, compilation date, installation path.
      operationId: api.controllers.manager_controller.get_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Manager information'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhInfo'
              example:
                data:
                  path: /var/ossec
                  version: v3.9.0
                  compilation_date: "2019-03-06T11:24:59Z"
                  type: manager
                  max_agents: 14000
                  openssl_support: yes
                  ruleset_version: 3905
                  tz_offset: +0000
                  tz_name: UTC
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/configuration:
    get:
      tags:
      - manager
      summary: Get configuration
      description: Returns wazuh configuration used
      operationId: api.controllers.manager_controller.get_configuration
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/section'
        - $ref: '#/components/parameters/field'
      responses:
        '200':
          description: 'Wazuh configuration'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhConfiguration'
              example:
                data:
                  global:
                    jsonout_output: yes
                    alerts_log: yes
                    logall: no
                    logall_json: no
                    email_notification: no
                    smtp_server: smtp.example.wazuh.com
                    email_from: ossecm@example.wazuh.com
                    email_to: recipient@example.wazuh.com
                    email_maxperhour: 12
                    email_log_source: alerts.log
                    queue_size: 131072
                    white_list:
                      - 127.0.0.1
                      - ^localhost.localdomain$
                      - 127.0.0.53
                  alerts:
                    log_alert_level: "3"
                    email_alert_level: "12"
                  cis-cat:
                    disabled: yes
                    timeout: 1800
                    interval: 1d
                    scan-on-start: yes
                    java_path: wodles/java
                    ciscat_path: wodles/ciscat
                  command:
                    - name: disable-account
                      executable: disable-account.sh
                      expect: user
                      timeout_allowed: yes
                    - name: restart-ossec
                      executable: restart-ossec.sh
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/stats:
    get:
      tags:
      - manager
      summary: Get stats.
      description: Returns Wazuh statistical information for the current or specified date.
      operationId: api.controllers.manager_controller.get_stats
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/date'
      responses:
        '200':
          description: 'Wazuh stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhStats'
              example:
                data:
                  - hour: 15
                    alerts:
                      - sigid: 5303
                        level: 3
                        times: 1
                      - sigid: 5501
                        level: 3
                        times: 4
                      - sigid: 221
                        level: 0
                        times: 653
                    totalAlerts: 658
                    events: 4387
                    firewall: 0
                  - hour: 16
                    alerts:
                      - sigid: 5521
                        level: 0
                        times: 1
                      - sigid: 530
                        level: 0
                        times: 120
                    totalAlerts: 121
                    events: 4379
                    syscheck: 0
                    firewall: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/stats/hourly:
    get:
      tags:
      - manager
      summary: Get stats by hour.
      description: Returns Wazuh statistical information per hour. Each number in the averages field represents the average of alerts per hour.
      operationId: api.controllers.manager_controller.get_stats_hourly
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh hourly stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhHourlyStats'
              example:
                data:
                  averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                  interactions: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/stats/weekly:
    get:
      tags:
      - manager
      summary: Get stats by week.
      description: Returns Wazuh statistical information per week. Each number in the averages field represents the average of alerts per hour for that specific day.
      operationId: api.controllers.manager_controller.get_stats_weekly
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh weekly stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhWeeklyStats'
              example:
                data:
                  Sun:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Mon:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Tue:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Wed:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Thu:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Fri:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
                  Sat:
                    averages:
                    - 40
                    - 24
                    - 67
                    - 234
                    - 66
                    - 24
                    - 634
                    - 66
                    - 123
                    - 56
                    - 65
                    - 23
                    - 666
                    - 233
                    - 646
                    - 44
                    - 64
                    - 99
                    - 34
                    - 235
                    - 653
                    - 25
                    - 65
                    - 23
                    interactions: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/stats/analysisd:
    get:
      tags:
      - manager
      summary: Get a analysisd stats.
      description: Returns Wazuh analysisd statistical information.
      operationId: api.controllers.manager_controller.get_stats_analysisd
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh analysisd stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhAnalysisdStats'
              example:
                data:
                  total_events_decoded: 5
                  syscheck_events_decoded: 0
                  syscheck_edps: 0
                  syscollector_events_decoded: 0
                  syscollector_edps: 0
                  rootcheck_events_decoded: 0
                  rootcheck_edps: 0
                  sca_events_decoded: 0
                  sca_edps: 0
                  hostinfo_events_decoded: 0
                  hostinfo_edps: 0
                  winevt_events_decoded: 0
                  winevt_edps: 0
                  other_events_decoded: 5
                  other_events_edps: 1
                  events_processed: 5
                  events_edps: 1
                  events_received: 5
                  events_dropped: 0
                  alerts_written: 0
                  firewall_written: 0
                  fts_written: 0
                  syscheck_queue_usage: 0
                  syscheck_queue_size: 16384
                  syscollector_queue_usage: 0
                  syscollector_queue_size: 16384
                  rootcheck_queue_usage: 0
                  rootcheck_queue_size: 16384
                  sca_queue_usage: 0
                  sca_queue_size: 16384
                  hostinfo_queue_usage: 0
                  hostinfo_queue_size: 16384
                  winevt_queue_usage: 0
                  winevt_queue_size: 16384
                  event_queue_usage: 0
                  event_queue_size: 16384
                  rule_matching_queue_usage: 0
                  rule_matching_queue_size: 16384
                  alerts_queue_usage: 0
                  alerts_queue_size: 16384
                  firewall_queue_usage: 0
                  firewall_queue_size: 16384
                  statistical_queue_usage: 0
                  statistical_queue_size: 16384
                  archives_queue_usage: 0
                  archives_queue_size: 16384
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/stats/remoted:
    get:
      tags:
      - manager
      summary: Get remoted stats.
      description: Returns Wazuh remoted statistical information.
      operationId: api.controllers.manager_controller.get_stats_remoted
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh remoted stats'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhRemotedStats'
              example:
                data:
                  queue_size: 0
                  total_queue_size: 131072
                  tcp_sessions: 0
                  evt_count: 0
                  ctrl_msg_count: 0
                  discarded_count: 0
                  msg_sent: 0
                  recv_bytes: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/logs:
    get:
      tags:
      - manager
      summary: Get the wazuh manager logs.
      description: Returns the last 2000 wazuh log entries.
      operationId: api.controllers.manager_controller.get_log
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/category'
        - $ref: '#/components/parameters/type_log'
      responses:
        '200':
          description: 'Wazuh logs'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/WazuhLogs'
              example:
                data:
                  totalItems: 3
                  items:
                    - timestamp: "2019-03-07 11:21:17"
                      tag: ossec-syscheckd
                      level: info
                      description: "Syscheck scan frequency: 43200 seconds"
                    - timestamp: "2019-03-07 11:21:17"
                      tag: ossec-syscheckd
                      level: info
                      description: Starting syscheck scan.
                    - timestamp: "2019-03-07 11:21:17"
                      tag: ossec-rootcheck
                      level: info
                      description: Starting rootcheck scan.
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/logs/summary:
    get:
      tags:
      - manager
      summary: Get a summary of the wazuh manager logs.
      description: Returns a summary of the last 2000 wazuh log entries.
      operationId: api.controllers.manager_controller.get_log_summary
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Wazuh logs summary'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/WazuhLogsSummary'
              example:
                data:
                  wazuh-modulesd:
                    info: 2
                    all: 2
                    critical: 0
                    debug: 0
                    error: 0
                    warning: 0
                  wazuh-db:
                    info: 1
                    all: 4
                    critical: 0
                    debug: 0
                    error: 3
                    warning: 0
                  ossec-rootcheck:
                    info: 8
                    all: 8
                    critical: 0
                    debug: 0
                    error: 0
                    warning: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/files:
    get:
      tags:
      - manager
      summary: Get file contents.
      description: Returns file contents from any file.
      operationId: api.controllers.manager_controller.get_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/path'
      responses:
        '200':
          description: 'File contents'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          contents:
                            description: File contents.
                            type: string
              example:
                data:
                  contents: "<!-- Local rules -->\n\n<!-- Modify it at your will. -->\n<!-- Copyright (C) 2015-2019, Wazuh Inc. -->\n\n<!-- Example -->\n<group name=\"local,syslog,sshd,\">\n\n  <!--\n  Dec 10 01:02:02 host sshd[1234]: Failed none for root from 1.1.1.1 port 1066 ssh2\n -->\n  <rule id=\"100001\" level=\"5\">\n    <if_sid>5716</if_sid>\n    <srcip>1.1.1.1</srcip>\n    <description>sshd: authentication failed from IP 1.1.1.1.</description>\n    <group>authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5,</group>\n  </rule>\n\n</group>\n"
        default:
          $ref: '#/components/responses/ResponseError'

    post:
      tags:
      - manager
      summary: Updates file contents.
      description: Replaces file contents with the data contained in the API request.
      operationId: api.controllers.manager_controller.post_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/path'
        - $ref: '#/components/parameters/overwrite'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: File updated successfully.
        default:
          $ref: '#/components/responses/ResponseError'

    delete:
      tags:
      - manager
      summary: Removes a file.
      description: Removes a specified file.
      operationId: api.controllers.manager_controller.delete_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/path'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: File was deleted.
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/restart:
    put:
      tags:
      - manager
      summary: Restarts the wazuh manager.
      description: Restarts the wazuh manager.
      operationId: api.controllers.manager_controller.put_restart
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Confirmation message'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Restarting manager.
        default:
          $ref: '#/components/responses/ResponseError'

  /manager/configuration/validation:
    get:
      tags:
      - manager
      summary: Check Wazuh configuration.
      description: Returns wether the Wazuh configuration is correct.
      operationId: api.controllers.manager_controller.get_conf_validation
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Configuration is OK'

        '400':
          description: 'Error in configuration'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiError'
                  - type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
              example:
                type: "about:blank"
                title: "Bad configuration"
                detail: "Wazuh configuration has not been properly set"
                errors:
                  - "(1230): Invalid element in the configuration: 'hello'."
                  - "(1202): Configuration error at '/var/ossec/etc/ossec.conf'."
        default:
          $ref: '#/components/responses/ResponseError'

  /rootcheck:
    put:
      tags:
      - rootcheck
      summary: Run a rootcheck scan in all agents.
      description: Runs syscheck and rootcheck in all agents (Wazuh launches both processes simultaneously).
      operationId: api.controllers.rootcheck_controller.put_rootcheck
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Restarting Syscheck/Rootcheck on all agents"
        default:
          $ref: '#/components/responses/ResponseError'

    delete:
      tags:
      - rootcheck
      summary: Clear rootcheck scan results in all agents.
      description: Clear rootcheck scan results in all agents.
      operationId: api.controllers.rootcheck_controller.delete_rootcheck
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Rootcheck database deleted"
        default:
          $ref: '#/components/responses/ResponseError'

  /rootcheck/{agent_id}:
    get:
      tags:
      - rootcheck
      summary: Get Rootcheck database
      description: Returns rootcheck findings and scan results in the specified agent.
      operationId: api.controllers.rootcheck_controller.get_rootcheck_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/rootcheck_status'
        - $ref: '#/components/parameters/pci'
        - $ref: '#/components/parameters/cis'
      responses:
        '200':
          description: Latest rootcheck scan result
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/RootcheckDatabase'
              example:
                data:
                  totalItems: 2
                  items:
                    - status: outstanding
                      readDay: "2019-03-08T09:20:05Z"
                      oldDay: "2019-03-08T09:20:05Z"
                      event: "System Audit: SSH Hardening - 3: Root can log in. File: /etc/ssh/sshd_config. Reference: 3 ."
                    - status: outstanding
                      readDay: "2019-03-08T09:20:05Z"
                      oldDay: "2019-03-08T09:20:05Z"
                      pci: 2.2.4
                      event: "System Audit: SSH Hardening - 4: No Public Key authentication {PCI_DSS: 2.2.4}. File: /etc/ssh/sshd_config. Reference: 4 ."
        default:
          $ref: '#/components/responses/ResponseError'

    put:
      tags:
      - rootcheck
      summary: Run rootcheck scan in an agent.
      description: Runs syscheck and rootcheck scans in a specified agent (Wazuh launches both processes at the same time).
      operationId: api.controllers.rootcheck_controller.put_rootcheck_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Restarting Syscheck/Rootcheck locally"
        default:
          $ref: '#/components/responses/ResponseError'

    delete:
      tags:
      - rootcheck
      summary: Clear rootcheck scan results for a specified agent.
      description: Clear rootcheck scan results for a specified agent.
      operationId: api.controllers.rootcheck_controller.delete_rootcheck_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Rootcheck database deleted"
        default:
          $ref: '#/components/responses/ResponseError'

  /rootcheck/{agent_id}/pci:
    get:
      tags:
      - rootcheck
      summary: Get PCI requirements in the rootcheck database.
      description: Returns a list containing PCI requirements that have been detected by rootcheck scans.
      operationId: api.controllers.rootcheck_controller.get_rootcheck_pci_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: PCI requirements list.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: string
              example:
                data:
                  totalItems: 1
                  items:
                  - 2.2.4
        default:
          $ref: '#/components/responses/ResponseError'

  /rootcheck/{agent_id}/cis:
    get:
      tags:
      - rootcheck
      summary: Get CIS requirements in the rootcheck database.
      description: Returns a list containing CIS requirements that have been detected by rootcheck scans.
      operationId: api.controllers.rootcheck_controller.get_rootcheck_cis_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: CIS requirements list.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: string
              example:
                data:
                  totalItems: 2
                  items:
                  - "2.3 Debian Linux"
                  - "1.4 Debian Linux"
        default:
          $ref: '#/components/responses/ResponseError'

  /rootcheck/{agent_id}/last_scan:
    get:
      tags:
      - rootcheck
      summary: Get last rootcheck scan dates.
      description: Returns when the last rootcheck scan started and ended. If the scan is still in progress the end date will be unknown.
      operationId: api.controllers.rootcheck_controller.get_last_scan_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Scan dates'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/LastScan'
              example:
                data:
                  end: "2019-03-08T10:35:21Z"
                  start: "2019-03-08T10:34:56Z"
        default:
          $ref: '#/components/responses/ResponseError'

  /rules:
    get:
      tags:
      - rules
      summary: Get information about all Wazuh rules.
      description: Returns a list containing information about each rule such as file where it's defined, description, rule group, status, etc.
      operationId: api.controllers.rules_controllers.get_rules
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/group'
        - $ref: '#/components/parameters/level'
        - $ref: '#/components/parameters/file'
        - $ref: '#/components/parameters/pathFilter'
        - $ref: '#/components/parameters/statusRLDParam'
        - $ref: '#/components/parameters/pci'
        - $ref: '#/components/parameters/gdpr'
      responses:
        '200':
          description: "Rules"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Rules'
              example:
                data:
                  totalItems: 2
                  items:
                    - file: 0016-wazuh_rules.xml
                      path: ruleset/rules
                      id: 203
                      level: 9
                      description: Agent event queue is full. Events may be lost.
                      status: enabled
                      groups:
                      - agent_flooding
                      - wazuh
                      pci:
                      -
                      gdpr:
                      - IV_35.7.d
                      details:
                        if_sid: "201"
                        level: "full"
                    - file: 0015-ossec_rules.xml
                      path: ruleset/rules
                      id: 513
                      level: 9
                      description: Windows malware detected.
                      status: enabled
                      groups:
                      - rootcheck
                      - gpg13_4.2
                      - ossec
                      pci:
                      -
                      gdpr:
                      - IV_35.7.d
                      details:
                        if_sid: "510"
                        match: "^Windows Malware"
        default:
          $ref: '#/components/responses/ResponseError'

  /rules/{rule_id}:
    get:
      tags:
      - rules
      summary: Filters rules by ID.
      description: Filters results of /rules endpoint filtering by ID.
      operationId: api.controllers.rules_controllers.get_rules_id
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/rule_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: "Rules"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Rules'
              example:
                data:
                  totalItems: 1
                  items:
                    - file: 0225-mcafee_av_rules.xml
                      path: ruleset/rules
                      id: 7514
                      level: 5
                      description: McAfee Windows AV - EICAR test file detected.
                      status: enabled
                      groups:
                      - mcafee
                      pci:
                      -
                      gdpr:
                      -
                      details:
                        if_sid: "7505"
                        match: contains the EICAR test file
                        options: alert_by_email
        default:
          $ref: '#/components/responses/ResponseError'

  /rules/groups:
    get:
      tags:
      - rules
      summary: Get all rule groups names.
      description: Returns a list containing all rule groups names.
      operationId: api.controllers.rules_controllers.get_rules_groups
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: 'Rule groups names'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: string
              example:
                data:
                  totalItems: 4
                  items:
                    - access_control
                    - access_denied
                    - accesslog
                    - account_changed
        default:
          $ref: '#/components/responses/ResponseError'

  /rules/pci:
    get:
      tags:
      - rules
      summary: Get all PCI requirements.
      description: Returns all PCI requirements names defined in the Wazuh ruleset.
      operationId: api.controllers.rules_controllers.get_rules_pci
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: 'PCI requirements names'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: string
              example:
                data:
                  totalItems: 4
                  items:
                    - "1.1.1"
                    - "1.3.4"
                    - "1.4"
                    - "10.1"
        default:
          $ref: '#/components/responses/ResponseError'

  /rules/gdpr:
    get:
      tags:
      - rules
      summary: Get all GDPR requirements.
      description: Returns all PCI requirements names defined in the Wazuh ruleset.
      operationId: api.controllers.rules_controllers.get_rules_gdpr
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: 'PCI requirements names'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                type: string
              example:
                data:
                  totalItems: 4
                  items:
                    - "II_5.1.f"
                    - "IV_30.1.g"
                    - "IV_32.2"
                    - "IV_35.7.d"
        default:
          $ref: '#/components/responses/ResponseError'

  /rules/files:
    get:
      tags:
      - rules
      summary: Get all files which defines rules.
      description: Returns a list containing all files used to define rules and their status.
      operationId: api.controllers.rules_controllers.get_rules_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/pathFilter'
        - $ref: '#/components/parameters/file'
        - $ref: '#/components/parameters/statusRLDParam'
        - $ref: '#/components/parameters/download'
      responses:
        '200':
          description: 'SCA database elements'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/RulesFiles'
              example:
                data:
                  totalItems: 4
                  items:
                    - file: 0010-rules_config.xml
                      path: ruleset/rules
                      status: enabled
                    - file: 0015-ossec_rules.xml
                      path: ruleset/rules
                      status: enabled
                    - file: 0016-wazuh_rules.xml
                      path: ruleset/rules
                      status: enabled
                    - file: 0020-syslog_rules.xml
                      path: ruleset/rules
                      status: enabled
        default:
          $ref: '#/components/responses/ResponseError'

  /sca/{agent_id}:
    get:
      tags:
      - sca
      summary: 'Get security configuration assessment (SCA) database'
      description: 'Returns the security SCA database of an agent.'
      operationId: api.controllers.sca_controller.get_sca_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/description'
        - $ref: '#/components/parameters/references'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'SCA database elements'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SCADatabase'
              example:
               data:
                totalItems: 2
                items:
                - name: "System audit for SSH hardening"
                  pass: 3
                  score: 33
                  references: "https://www.ssh.com/ssh/"
                  fail: 6
                  description: "Guidance for establishing a secure configuration for SSH service vulnerabilities."
                  policy_id: "system_audit_ssh"
                  end_scan: "2019-03-06T10:12:02Z"
                  start_scan: "2019-03-06T10:12:02Z"
                - name: "CIS benchmark for Debian/Linux"
                  pass: 36
                  score: 87
                  references: "https://www.cisecurity.org/cis-benchmarks/"
                  fail: 5
                  description: "This document provides prescriptive guidance for establishing a secure configuration posture for Debian Linux systems running on x86 and x64 platforms. Many lists are included including filesystem types, services, clients, and network protocols. Not all items in these lists are guaranteed to exist on all distributions and additional similar items may exist which should be considered in addition to those explicitly mentioned."
                  policy_id: "cis_debian"
                  end_scan: "2019-03-06T10:11:53Z"
                  start_scan: "2019-03-06T10:11:53Z"
        default:
          $ref: '#/components/responses/ResponseError'

  /sca/{agent_id}/checks/{policy_id}:
    get:
      tags:
      - sca
      summary: 'Get policy monitoring alerts for a given policy'
      description: 'Returns the policy monitoring alerts for a given policy'
      operationId: api.controllers.sca_controller.get_sca_checks
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/policy_id'
        - $ref: '#/components/parameters/title'
        - $ref: '#/components/parameters/description'
        - $ref: '#/components/parameters/rationale'
        - $ref: '#/components/parameters/remediation'
        - $ref: '#/components/parameters/file'
        - $ref: '#/components/parameters/process'
        - $ref: '#/components/parameters/directory'
        - $ref: '#/components/parameters/registry'
        - $ref: '#/components/parameters/references'
        - $ref: '#/components/parameters/result'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          description: 'List of SCA Checks for a given policy ID'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SCAChecks'
              example:
                data:
                  totalItems: 2
                  items:
                  - remediation: "For new installations, during installation create a custom partition setup and specify a separate partition for /var. For systems that were previously installed, create a new partition and configure /etc/fstab as appropriate."
                    rationale: "Since the /var directory may contain world-writable files and directories, there is a risk of resource exhaustion if it is not bound to a separate partition."
                    title: "Ensure separate partition exists for /var"
                    policy_id: cis_debian
                    file: /etc/fstab
                    description: "The /var directory is used by daemons and other system services to temporarily store dynamic data. Some directories created by these processes may be world-writable."
                    id: 5003
                    result: failed
                    references: "https://tldp.org/HOWTO/LVM-HOWTO/"
                    compliance:
                    - key: cis
                      value: "1.1.6"
                    - key: cis_csc
                      value: "5"
                  - remediation: "Run the following commands to remove exim: # apt-get remove exim4; # apt-get purge exim4"
                    rationale: "Unless POP3 and/or IMAP servers are to be provided by this system, it is recommended that the package be removed to reduce the potential attack surface."
                    title: "Ensure IMAP and POP3 server is not enabled (POP3)"
                    policy_id: cis_debian
                    file: /etc/inetd.conf
                    description: exim is an open source IMAP and POP3 server for Linux based systems.
                    id: 5022
                    result: passed
                    compliance:
                    - key: cis
                      value: "2.2.11"
                    - key: cis_csc
                      value: "9"
                    - key: pci_dss
                      value: "2.2.2"
        default:
          $ref: '#/components/responses/ResponseError'

  /syscheck:
    put:
      tags:
      - syscheck
      summary: Run a syscheck scan in all agents.
      description: Runs syscheck and rootcheck in all agents (Wazuh launches both processes simultaneously).
      operationId: api.controllers.syscheck_controller.put_syscheck
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Restarting Syscheck/Rootcheck on all agents"
        default:
          $ref: '#/components/responses/ResponseError'

  /syscheck/{agent_id}:
    get:
      tags:
      - syscheck
      summary: Get File integrity monitoring scan results
      description: Returns FIM findings in the specified agent.
      operationId: api.controllers.syscheck_controller.get_syscheck_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/file'
        - $ref: '#/components/parameters/filetype'
        - $ref: '#/components/parameters/summary'
        - $ref: '#/components/parameters/md5'
        - $ref: '#/components/parameters/sha1'
        - $ref: '#/components/parameters/sha256'
        - $ref: '#/components/parameters/hashfilter'
      responses:
        '200':
          description: Latest syscheck scan result
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscheckDatabase'
              example:
                data:
                  totalItems: 2
                  items:
                    - size: 61
                      md5: 8588d49be3999f2daf69c3090682594f
                      inode: 946
                      perm: "100644"
                      gname: root
                      mtime: "2019-01-15T15:49:39Z"
                      sha1: a2219a7fd0a77be7422a02049b8d27805c0250ba
                      date: "2019-03-08T10:35:06Z"
                      uname: root
                      sha256: 303c346ece82ca4f6713ac176164285d0469f326b6f12a787e11f5d702529277
                      gid: 0
                      type: file
                      uid: 0
                      file: /etc/ssl/certs/TeliaSonera_Root_CA_v1.pem
                    - sha1: 016f8bd2ea009451042a856611d5d2967760e833
                      file: /etc/ssh/ssh_config
                      md5: f7bf238a3b0bf155c565454a9f819731
                      inode: 1579
                      uid: "0"
                      date: "2019-03-08T10:35:01Z"
                      perm: 100644
                      type: file
                      gname: root
                      uname: root
                      size: 1580
                      gid: "0"
                      mtime: "2018-11-05T11:51:29Z"
                      sha256: a39fbc57dc2ef8a473f078d1f6a35f725809400df67070b8852e8ed725047df2
        default:
          $ref: '#/components/responses/ResponseError'

    put:
      tags:
      - syscheck
      summary: Run FIM scan in an agent.
      description: Runs syscheck and rootcheck scans in a specified agent (Wazuh launches both processes at the same time).
      operationId: api.controllers.syscheck_controller.put_syscheck_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Restarting Syscheck/Rootcheck locally"
        default:
          $ref: '#/components/responses/ResponseError'

    delete:
      tags:
      - syscheck
      summary: Clear FIM scan results for a specified agent.
      description: Clear file integrity monitoring scan results for a specified agent.
      operationId: api.controllers.syscheck_controller.delete_syscheck_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: Confirmation message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: "Syscheck database deleted"
        default:
          $ref: '#/components/responses/ResponseError'

  /syscheck/{agent_id}/last_scan:
    get:
      tags:
      - syscheck
      summary: Get last syscheck scan dates.
      description: Returns when the last syscheck scan started and ended. If the scan is still in progress the end date will be unknown.
      operationId: api.controllers.syscheck_controller.get_last_scan_agent
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
      responses:
        '200':
          description: 'Scan dates'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/LastScan'
              example:
                data:
                  end: "2019-03-08T10:35:21Z"
                  start: "2019-03-08T10:34:56Z"
        default:
          $ref: '#/components/responses/ResponseError'

  /decoders:
    get:
      tags:
        - decoders
      summary: 'Get all decoders'
      description: "Returns information about all decoders included in ossec.conf. This information include decoder's route, decoder's name, decoder's file among others"
      operationId: api.controllers.decoders_controller.get_decoders
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/file'
        - $ref: '#/components/parameters/pathFilter'
        - $ref: '#/components/parameters/statusRLDParam'

      responses:
        '200':
          description: 'List of decoders included in ossec.conf'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Decoder'
              example:
                data:
                  totalItems: 571
                  items:
                  - file: 0005-wazuh_decoders.xml
                    name: wazuh
                    position: 0
                    status: enabled
                    details:
                      prematch: "^wazuh: "
                  - file: 0005-wazuh_decoders.xml
                    name: agent-buffer
                    position: 1
                    status: enabled
                    details:
                      parent: wazuh
                      prematch: "^Agent buffer:"
                      regex: "^ '(\\S+)'."
                      order: level
        default:
          $ref: '#/components/responses/ResponseError'

  /decoders/{decoder_name}:
    get:
      tags:
        - decoders
      summary: 'Get decoders by name'
      description: "Returns information about decoders with a specified name. This information include decoder's route, decoder's name, decoder's file among others"
      operationId: api.controllers.decoders_controller.get_decoders_by_name
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/decoder_name'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: 'List of decoders with a specified selected'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Decoder'
              example:
                data:
                  totalItems: 3
                  items:
                  - file: 0025-apache_decoders.xml
                    name: apache-errorlog
                    position: 0
                    status: enabled
                    details:
                      program_name: "^apache2|^httpd"
                  - file: 0025-apache_decoders.xml
                    name: apache-errorlog
                    position: 1
                    status: enabled
                    details:
                      prematch: "^[warn] |^[notice] |^[error] "
                  - file: 0025-apache_decoders.xml
                    name: apache-errorlog
                    position: 2
                    status: enabled
                    details:
                      prematch: "^[\\w+ \\w+ \\d+ \\d+:\\d+:\\d+.\\d+ \\d+] [\\S+:warn] |^[\\w+ \\w+ \\d+ \\d+:\\d+:\\d+.\\d+ \\d+] [\\S+:notice] |^[\\w+ \\w+ \\d+ \\d+:\\d+:\\d+.\\d+ \\d+] [\\S*:error] |^[\\w+ \\w+ \\d+ \\d+:\\d+:\\d+.\\d+ \\d+] [\\S+:info] "
        default:
          $ref: '#/components/responses/ResponseError'

  /decoders/files:
    get:
      tags:
        - decoders
      summary: 'Get all decoders files'
      description: "Returns information about all decoders files used in Wazuh. This information include decoder's file, decoder's route and decoder's status among others"
      operationId: api.controllers.decoders_controller.get_decoders_files
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/file'
        - $ref: '#/components/parameters/pathFilter'
        - $ref: '#/components/parameters/statusRLDParam'
        - $ref: '#/components/parameters/download'
      responses:
        '200':
          description: 'List of decoders files'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/DecoderFile'
              example:
                data:
                  totalItems: 571
                  items:
                  - file: 0185-openldap_decoders.xml
                    status: enabled
                  - file: 0220-postfix_decoders.xml
                    status: enabled
                  - file: 0400-identity_guard_decoders.xml
                    status: enabled
                  - file: 0190-openvpn_decoders.xml
                    status: enabled
                  - file: 0060-cisco-estreamer_decoders.xml
                    status: enabled
                  - file: 0335-telnet_decoders.xml
                    status: enabled
                  - file: 0035-asterisk_decoders.xml
                    status: enabled
                  - file: 0275-sendmail_decoders.xml
                    status: enabled
                  - file: 0345-unbound_decoders.xml
                    path: /var/ossec/ruleset/decoders
                    status: enabled
                  - file: 0345-unbound_decoders.xml
                    status: enabled
        default:
          $ref: '#/components/responses/ResponseError'

  /decoders/parents:
    get:
      tags:
        - decoders
      summary: 'Get all parent decoders'
      description: 'Returns information about all parent decoders. A parent decoder is a decoder used as base of other decoders'
      operationId: api.controllers.decoders_controller.get_decoders_parents
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: 'List of parent decoders'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/Decoder'
              example:
                data:
                  totalItems: 153
                  items:
                  - file: local_decoder.xml
                    name: local_decoder_example
                    position: 0
                    status: enabled
                    details:
                      program_name: local_decoder_example
                  - file: 0465-azure_decoders.xml
                    name: azure-storage
                    position: 1
                    status: enabled
                    details:
                      prematch: "^azure_tag: azure-storage. "
                      regex: "^azure_storage_tag: (\\S+)"
                      order: tag
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscheck:
    delete:
      tags:
        - experimental
      summary: 'Clear syscheck database'
      description: 'Clears the syscheck database for all agents.'
      operationId: api.controllers.experimental_controller.clear_syscheck_database
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
      responses:
        '200':
          description: 'Delete syscheck database'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                message: Syscheck database deleted
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/ciscat/results:
    get:
      tags:
        - experimental
      summary: 'Get CIS-CAT results'
      description: "Returns the agent's ciscat results info."
      operationId: api.controllers.experimental_controller.get_cis_cat_results
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/benchmark'
        - $ref: '#/components/parameters/profile'
        - $ref: '#/components/parameters/pass'
        - $ref: '#/components/parameters/fail'
        - $ref: '#/components/parameters/error'
        - $ref: '#/components/parameters/notchecked'
        - $ref: '#/components/parameters/unknown'
        - $ref: '#/components/parameters/score'
      responses:
        '200':
          description: 'Return a list of CIS-CAT results'
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/CiscatResults'
              example:
                data:
                  totalItems: 2
                  items:
                  - profile: xccdf_org.cisecurity.benchmarks_profile_Level_1_-_Workstation
                    score: 64
                    error: 0
                    scan:
                      id: 1406741147
                      time: "2018-09-06T07:50:52.630Z"
                    fail: 53
                    benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                    pass: 96
                    notchecked: 71
                    unknown: 0
                  - profile: xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server
                    score: 57
                    error: 0
                    scan:
                      id: 1406741147
                      time: "2018-09-06T07:50:15.632Z"
                    fail: 79
                    benchmark: CIS Ubuntu Linux 16.04 LTS Benchmark
                    pass: 104
                    notchecked: 36
                    unknown: 1
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/hardware:
    get:
      tags:
        - experimental
      summary: 'Get hardware info of all agents'
      description: "Returns the agent's hardware info. This information include cpu, ram, scan info among others of all agents."
      operationId: api.controllers.experimental_controller.get_hardware_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/ram_free'
        - $ref: '#/components/parameters/ram_total'
        - $ref: '#/components/parameters/cpu_cores'
        - $ref: '#/components/parameters/cpu_mhz'
        - $ref: '#/components/parameters/cpu_name'
        - $ref: '#/components/parameters/board_serial'
      responses:
        '200':
          description: "Return a list of agent's hardware results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorHardware'
              example:
                data:
                  totalItems: 4
                  items:
                  - cpu:
                      core: 2
                      mhz: 1992.001
                      name: Intel(R) Core(TM) i7-8550U CPU @ 1.80GHz
                    ram:
                      free: 65396
                      total: 492832
                      usage: 87
                    scan:
                      id: 219248827
                      time: "2019-02-19T10:22:14Z"
                    board_serial: "0"
                    agent_id: "000"
                  - cpu:
                      core: 1
                      mhz: 1992.001
                      name: Intel(R) Core(TM) i7-8550U CPU @ 1.80GHz
                    ram:
                      free: 40372
                      total: 234968
                      usage: 83
                    scan:
                      id: 257116304
                      time: "2019-02-19T10:26:20Z"
                    board_serial: "0"
                    agent_id: "001"
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/netaddr:
    get:
      tags:
        - experimental
      summary: 'Get the IPv4 and IPv6 addresses associated all network interfaces'
      description: "Returns the agent's IPv4 and IPv6 addresses associated its network interfaces. This information include used IP protocol, interface, IP address  among others  of all agents."
      operationId: api.controllers.experimental_controller.get_network_address_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/proto'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/broadcast'
        - $ref: '#/components/parameters/netmask'
      responses:
        '200':
          description: "Return a list of agent's network results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorNetwork'
              example:
                data:
                  totalItems: 16
                  items:
                  - proto: "ipv6"
                    iface: "enp0s3"
                    scan_id: 1203337658
                    address: "fe80::f9:71ff:fed7:9d11"
                    netmask: "ffff:ffff:ffff:ffff::"
                    agent_id: "000"
                  - proto: "ipv6"
                    iface: "enp0s8"
                    scan_id: 1203337658
                    address: "fe80::a00:27ff:fefc:51f5"
                    netmask: "ffff:ffff:ffff:ffff::"
                    agent_id: "000"
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/netiface:
    get:
      tags:
        - experimental
      summary: 'Get all network interfaces from all agents.'
      description: "Returns the agent's network interfaces. This information include rx, scan, tx info and some network information among others  of all agents."
      operationId: api.controllers.experimental_controller.get_network_interface_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/adapter'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/mtu'
        - $ref: '#/components/parameters/tx_packets'
        - $ref: '#/components/parameters/rx_packets'
        - $ref: '#/components/parameters/tx_bytes'
        - $ref: '#/components/parameters/rx_bytes'
        - $ref: '#/components/parameters/tx_errors'
        - $ref: '#/components/parameters/rx_errors'
        - $ref: '#/components/parameters/tx_dropped'
        - $ref: '#/components/parameters/rx_dropped'
      responses:
        '200':
          description: "Return a list of agent's network interfaces results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorInterface'
              example:
                data:
                  totalItems: 8
                  items:
                  - rx:
                      bytes: 47319629
                      dropped: 0
                      errors: 0
                      packets: 43889
                    scan:
                      id: 1203337658
                      time: "2019-02-19T10:22:14Z"
                    tx:
                      bytes: 843282
                      dropped: 0
                      errors: 0
                      packets: 12505
                    mac: "02:f9:71:d7:9d:11"
                    name: "enp0s3"
                    type: "ethernet"
                    mtu: 1500
                    state: "up"
                    agent_id: "000"
                  - rx:
                      bytes: 0
                      dropped: 0
                      errors: 0
                      packets: 0
                    scan:
                      id: 1203337658
                      time: "2019-02-19T10:22:14Z"
                    tx:
                      bytes: 3874
                      dropped: 0
                      errors: 0
                      packets: 19
                    mac: "08:00:27:fc:51:f5"
                    name: "enp0s8"
                    type: "ethernet"
                    mtu: 1500
                    state: "up"
                    agent_id: "000"
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/netproto:
    get:
      tags:
        - experimental
      summary: 'Get network protocol info of all agents'
      description: "Returns the agent's routing configuration for each network interface. This information include interface, type protocol information among others of all agents."
      operationId: api.controllers.experimental_controller.get_network_protocol_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/iface'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/gateway'
        - $ref: '#/components/parameters/dhcp'
      responses:
        '200':
          description: "Return a list of agent's network protocol results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorProtocol'
              example:
                data:
                  totalItems: 16
                  items:
                  - iface: "enp0s3"
                    scan_id: 1203337658
                    type: "ipv6"
                    dhcp: "enabled"
                    agent_id: "000"
                  - iface: "enp0s8"
                    scan_id: 1203337658
                    type: "ipv6"
                    dhcp: "enabled"
                    agent_id: "000"
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/os:
    get:
      tags:
        - experimental
      summary: 'Get OS info of all agents'
      description: "Returns the agent's OS info. This information include os information, architecture information among others of all agents."
      operationId: api.controllers.experimental_controller.get_os_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/os_name'
        - $ref: '#/components/parameters/architecture'
        - $ref: '#/components/parameters/os_version'
        - $ref: '#/components/parameters/version'
        - $ref: '#/components/parameters/release'
      responses:
        '200':
          description: "Return a list of agent's OS results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorOS'
              example:
                data:
                  totalItems: 4
                  items:
                  - os:
                      codename: "Bionic Beaver"
                      major: "18"
                      minor: "04"
                      name: "Ubuntu"
                      platform: "ubuntu"
                      version: "18.04.1 LTS (Bionic Beaver)"
                    scan:
                      id: 651932304
                      time: "2019-02-19T10:22:14Z"
                    release: "4.15.0-43-generic"
                    architecture: "x86_64"
                    version: "#46-Ubuntu SMP Thu Dec 6 14:45:28 UTC 2018"
                    sysname: "Linux"
                    hostname: "master"
                    agent_id: "000"
                  - os:
                      codename: "Bionic Beaver"
                      major: "18"
                      minor: "04"
                      name: "Ubuntu"
                      platform: "ubuntu"
                      version: "18.04.1 LTS (Bionic Beaver)"
                    scan:
                      id: 780978297
                      time: "2019-02-19T10:26:20Z"
                    release: "4.15.0-43-generic"
                    architecture: "x86_64"
                    version: "#46-Ubuntu SMP Thu Dec 6 14:45:28 UTC 2018"
                    sysname: "Linux"
                    hostname: "agent-1"
                    agent_id: "001"
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/packages:
    get:
      tags:
        - experimental
      summary: 'Get packages info of all agents'
      description: "Returns the agent's packages info. This information include name, section, size, priority information of all packages among others of all agents."
      operationId: api.controllers.experimental_controller.get_packages_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/vendor'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/architecture'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/package_version'
      responses:
        '200':
          description: "Return a list of agent's packages results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorPackages'
              example:
                data:
                  totalItems: 2014
                  items:
                  - scan:
                      id: 1631140954
                      time: "2019-02-19T10:22:14Z"
                    name: "acl"
                    section: "utils"
                    priority: "optional"
                    size: 200
                    description: "Access control list utilities"
                    architecture: "amd64"
                    multiarch: "foreign"
                    vendor: "Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>"
                    version: "2.2.52-3build1"
                    format: "deb"
                    agent_id: "000"
                  - scan:
                      id: 1631140954
                      time: "2019-02-19T10:22:14Z"
                    name: "accountsservice"
                    section: "admin"
                    priority: "optional"
                    size: 440
                    description: "query and manipulate user account information"
                    architecture: "amd64"
                    multiarch: "foreign"
                    vendor: "Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>"
                    version: "0.6.45-1ubuntu1"
                    format: "deb"
                    agent_id: "000"
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/ports:
    get:
      tags:
        - experimental
      summary: 'Get ports info of all agents'
      description: "Returns the agent's ports info. This information include local IP, Remote IP, protocol information among others of all agents."
      operationId: api.controllers.experimental_controller.get_ports_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/pid'
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/local_ip'
        - $ref: '#/components/parameters/local_port'
        - $ref: '#/components/parameters/remote_ip'
        - $ref: '#/components/parameters/tx_queue'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/process'
      responses:
        '200':
          description: "Return a list of agent's packages results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorPorts'
              example:
                data:
                  totalItems: 18
                  items:
                  - local:
                      ip: 172.17.0.100
                      port: 1516
                    remote:
                      ip: 172.17.0.101
                      port: 54550
                    scan:
                      id: 1672337392
                      time: "2019-03-14T10:38:21Z"
                    state: established
                    protocol: tcp
                    rx_queue: 0
                    tx_queue: 0
                    inode: 321208
                  - local:
                      ip: "::"
                      port: 55000
                    remote:
                      ip: "::"
                      port: 0
                    scan:
                      id: 1672337392
                      time: "2019-03-14T10:38:21Z"
                    state: listening
                    protocol: tcp6
                    rx_queue: 0
                    inode: 18153
                    tx_queue: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /experimental/syscollector/processes:
    get:
      tags:
        - experimental
      summary: 'Get processes info of all agents'
      description: "Returns the agent's processes info."
      operationId: api.controllers.experimental_controller.get_processes_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/process_pid'
        - $ref: '#/components/parameters/process_state'
        - $ref: '#/components/parameters/ppid'
        - $ref: '#/components/parameters/egroup'
        - $ref: '#/components/parameters/euser'
        - $ref: '#/components/parameters/fgroup'
        - $ref: '#/components/parameters/process_name'
        - $ref: '#/components/parameters/nlwp'
        - $ref: '#/components/parameters/pgrp'
        - $ref: '#/components/parameters/priority'
        - $ref: '#/components/parameters/rgroup'
        - $ref: '#/components/parameters/ruser'
        - $ref: '#/components/parameters/sgroup'
        - $ref: '#/components/parameters/suser'
      responses:
        '200':
          description: "Return a list of agent's processes results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorProcess'
              example:
                data:
                  totalItems: 420
                  items:
                  - scan:
                      id: 225991434
                      time: "2019-03-08T08:30:59Z"
                    fgroup: "root"
                    state: "S"
                    priority: 20
                    suser: "root"
                    ppid: 0
                    vm_size: 0
                    session: 0
                    pid: "2"
                    nlwp: 1
                    name: "kthreadd"
                    euser: "root"
                    sgroup: "root"
                    size: 0
                    stime: 0
                    nice: 0
                    share: 0
                    processor: 1
                    ruser: "root"
                    egroup: "root"
                    rgroup: "root"
                    pgrp: 0
                    resident: 0
                    utime: 0
                    tgid: 2
                    start_time: 8
                    tty: 0
                    agent_id: "000"
                  - scan:
                      id: 225991434
                      time: "2019-03-08T08:30:59Z"
                    fgroup: "root"
                    state: "S"
                    priority: 25
                    suser: "root"
                    ppid: 2
                    vm_size: 0
                    session: 0
                    pid: "28"
                    nlwp: 1
                    name: "ksmd"
                    euser: "root"
                    sgroup: "root"
                    size: 0
                    stime: 0
                    nice: 5
                    share: 0
                    processor: 1
                    ruser: "root"
                    egroup: "root"
                    rgroup: "root"
                    pgrp: 0
                    resident: 0
                    utime: 0
                    tgid: 28
                    start_time: 22
                    tty: 0
                    agent_id: "000"
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/hardware:
    get:
      tags:
        - syscollector
      summary: 'Get hardware info'
      description: "Returns the agent's hardware info. This information include cpu, ram, scan info among others."
      operationId: api.controllers.syscollector_controller.get_hardware_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: "Return a list of agent's hardware results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/SyscollectorHardware'
              example:
                data:
                  cpu:
                    core: 2
                    mhz: 1991.999
                    name: Intel(R) Core(TM) i7-8550U CPU @ 1.80GHz
                  ram:
                    free: 55592
                    total: 492832
                    usage: 89
                  scan:
                    id: 599386135
                    time: "2019-03-08T08:30:53Z"
                  board_serial: "0"
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/netaddr:
    get:
      tags:
        - syscollector
      summary: 'Get network address info of an agent'
      description: "Returns the agent's network address info. This information include used IP protocol, interface, IP address  among others."
      operationId: api.controllers.syscollector_controller.get_network_address_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/iface_name'
        - $ref: '#/components/parameters/proto'
        - $ref: '#/components/parameters/address'
        - $ref: '#/components/parameters/broadcast'
        - $ref: '#/components/parameters/netmask'
      responses:
        '200':
          description: "Return a list of agent's network results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorNetwork'
              example:
                data:
                  totalItems: 4
                  items:
                  - proto: "ipv6"
                    address: "fe80::f9:71ff:fed7:9d11"
                    iface: "enp0s3"
                    netmask: "ffff:ffff:ffff:ffff::"
                    scan_id: 1478544824
                  - proto: "ipv6"
                    address: "fe80::a00:27ff:fe78:5d4"
                    iface: "enp0s8"
                    netmask: "ffff:ffff:ffff:ffff::"
                    scan_id: 1478544824
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/netiface:
    get:
      tags:
        - syscollector
      summary: 'Get network interface info of an agents'
      description: "Returns the agent's network interface info. This information include rx, scan, tx info and some network information among others."
      operationId: api.controllers.syscollector_controller.get_network_interface_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/adapter'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/mtu'
        - $ref: '#/components/parameters/tx_packets'
        - $ref: '#/components/parameters/rx_packets'
        - $ref: '#/components/parameters/tx_bytes'
        - $ref: '#/components/parameters/rx_bytes'
        - $ref: '#/components/parameters/tx_errors'
        - $ref: '#/components/parameters/rx_errors'
        - $ref: '#/components/parameters/tx_dropped'
        - $ref: '#/components/parameters/rx_dropped'
      responses:
        '200':
          description: "Return a list of agent's network interfaces results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorInterface'
              example:
                data:
                  totalItems: 2
                  items:
                  - rx:
                      bytes: 151695946
                      dropped: 0
                      errors: 0
                      packets: 111792
                    scan:
                      id: 1478544824
                      time: "2019-03-08T08:30:53Z"
                    tx:
                      bytes: 2408059
                      dropped: 0
                      errors: 0
                      packets: 35104
                    name: "enp0s3"
                    state: "up"
                    type: "ethernet"
                    mtu: 1500
                    mac: "02:f9:71:d7:9d:11"
                  - rx:
                      bytes: 0
                      dropped: 0
                      errors: 0
                      packets: 0
                    scan:
                      id: 1478544824
                      time: "2019-03-08T08:30:53Z"
                    tx:
                      bytes: 5312
                      dropped: 0
                      errors: 0
                      packets: 24
                    name: "enp0s8"
                    state: "up"
                    type: "ethernet"
                    mtu: 1500
                    mac: "08:00:27:78:05:d4"
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/netproto:
    get:
      tags:
        - syscollector
      summary: 'Get network protocol info of an agent'
      description: "Returns the agent's routing configuration for each network interface."
      operationId: api.controllers.syscollector_controller.get_network_protocol_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/iface'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/gateway'
        - $ref: '#/components/parameters/dhcp'
      responses:
        '200':
          description: "Return a list of agent's network protocol results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorProtocol'
              example:
                data:
                  totalItems: 4
                  items:
                  - type: "ipv6"
                    iface: "enp0s3"
                    dhcp: "enabled"
                    scan_id: 1478544824
                  - type: "ipv6"
                    iface: "enp0s8"
                    dhcp: "enabled"
                    scan_id: 1478544824
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/os:
    get:
      tags:
        - syscollector
      summary: 'Get OS info'
      description: "Returns the agent's OS info. This information include os information, architecture information among others of all agents."
      operationId: api.controllers.syscollector_controller.get_os_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/select'
      responses:
        '200':
          description: "Return a list of agent's OS results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/SyscollectorOS'
              example:
                data:
                  os:
                    codename: "Bionic Beaver"
                    major: "18"
                    minor: "04"
                    name: "Ubuntu"
                    platform: "ubuntu"
                    version: "18.04.1 LTS (Bionic Beaver)"
                  scan:
                    id: 242764188
                    time: "2019-03-08T08:30:53Z"
                  architecture: "x86_64"
                  release: "4.15.0-43-generic"
                  version: "#46-Ubuntu SMP Thu Dec 6 14:45:28 UTC 2018"
                  sysname: "Linux"
                  hostname: "master"
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/packages:
    get:
      tags:
        - syscollector
      summary: 'Get packages info'
      description: "Returns the agent's packages info. This information include name, section, size, priority information of all packages among others."
      operationId: api.controllers.syscollector_controller.get_packages_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/vendor'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/architecture'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/package_version'
      responses:
        '200':
          description: "Return a list of agent's packages results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorPackages'
              example:
                data:
                  totalItems: 535
                  items:
                  - scan:
                      id: 520922172
                      time: "2019-03-08T08:30:53Z"
                    vendor: "Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>"
                    name: "base-files"
                    priority: "required"
                    description: "Debian base system miscellaneous files"
                    architecture: "amd64"
                    format: "deb"
                    size: 386
                    version: "10.1ubuntu2.3"
                    section: "admin"
                    multiarch: "foreign"
                  - scan:
                      id: 520922172
                      time: "2019-03-08T08:30:53Z"
                    vendor: "Colin Watson <cjwatson@debian.org>"
                    name: "base-passwd"
                    priority: "required"
                    description: "Debian base system master password and group files"
                    architecture: "amd64"
                    format: "deb"
                    size: 228
                    version: "3.5.44"
                    section: "admin"
                    multiarch: "foreign"
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/ports:
    get:
      tags:
        - syscollector
      summary: 'Get ports info of an agents'
      description: "Returns the agent's ports info. This information include local IP, Remote IP, protocol information among others."
      operationId: api.controllers.syscollector_controller.get_ports_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/pid'
        - $ref: '#/components/parameters/protocol'
        - $ref: '#/components/parameters/local_ip'
        - $ref: '#/components/parameters/local_port'
        - $ref: '#/components/parameters/remote_ip'
        - $ref: '#/components/parameters/tx_queue'
        - $ref: '#/components/parameters/state'
      responses:
        '200':
          description: "Return a list of agent's packages results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorPorts'
              example:
                data:
                  totalItems: 18
                  items:
                  - local:
                      ip: 172.17.0.100
                      port: 1516
                    remote:
                      ip: 172.17.0.101
                      port: 54550
                    scan:
                      id: 1672337392
                      time: "2019-03-14T10:38:21Z"
                    state: established
                    protocol: tcp
                    rx_queue: 0
                    tx_queue: 0
                    inode: 321208
                  - local:
                      ip: "::"
                      port: 55000
                    remote:
                      ip: "::"
                      port: 0
                    scan:
                      id: 1672337392
                      time: "2019-03-14T10:38:21Z"
                    state: listening
                    protocol: tcp6
                    rx_queue: 0
                    inode: 18153
                    tx_queue: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /syscollector/{agent_id}/processes:
    get:
      tags:
        - syscollector
      summary: 'Get processes info'
      description: "Returns the agent's processes info."
      operationId: api.controllers.syscollector_controller.get_processes_info
      parameters:
        - $ref: '#/components/parameters/pretty'
        - $ref: '#/components/parameters/wait_for_complete'
        - $ref: '#/components/parameters/agent_id'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/process_pid'
        - $ref: '#/components/parameters/process_state'
        - $ref: '#/components/parameters/ppid'
        - $ref: '#/components/parameters/egroup'
        - $ref: '#/components/parameters/euser'
        - $ref: '#/components/parameters/fgroup'
        - $ref: '#/components/parameters/process_name'
        - $ref: '#/components/parameters/nlwp'
        - $ref: '#/components/parameters/pgrp'
        - $ref: '#/components/parameters/priority'
        - $ref: '#/components/parameters/rgroup'
        - $ref: '#/components/parameters/ruser'
        - $ref: '#/components/parameters/sgroup'
        - $ref: '#/components/parameters/suser'
      responses:
        '200':
          description: "Return a list of agent's processes results"
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                        - $ref: '#/components/schemas/ListMetadata'
                        - type: object
                          properties:
                            items:
                              type: array
                              items:
                                $ref: '#/components/schemas/SyscollectorProcess'
              example:
                data:
                  totalItems: 120
                  items:
                  - scan:
                      id: 225991434
                      time: "2019-03-08T08:30:59Z"
                    fgroup: "root"
                    state: "S"
                    priority: 20
                    suser: "root"
                    ppid: 2196
                    vm_size: 13312
                    session: 2195
                    pid: "2204"
                    nlwp: 1
                    name: "bash"
                    euser: "root"
                    sgroup: "root"
                    size: 3328
                    stime: 0
                    nice: 0
                    argvs: "/tmp/vagrant-shell,172.17.0.100,master,node01"
                    share: 595
                    processor: 1
                    ruser: "root"
                    cmd: "bash"
                    egroup: "root"
                    rgroup: "root"
                    pgrp: 2195
                    resident: 659
                    utime: 0
                    tgid: 2204
                    start_time: 8
                    tty: 0
                  - scan:
                      id: 225991434
                      time: "2019-03-08T08:30:59Z"
                    fgroup: "root"
                    state: "I"
                    priority: 0
                    suser: "root"
                    ppid: 2
                    vm_size: 0
                    session: 0
                    pid: "121"
                    nlwp: 1
                    name: "charger_manager"
                    euser: "root"
                    sgroup: "root"
                    size: 0
                    stime: 0
                    nice: -20
                    share: 0
                    processor: 1
                    ruser: "root"
                    egroup: "root"
                    rgroup: "root"
                    pgrp: 0
                    resident: 0
                    utime: 0
                    tgid: 121
                    start_time: 1009
                    tty: 0
        default:
          $ref: '#/components/responses/ResponseError'

  /security/user/authenticate:
    get:
      tags:
      - login
      summary: 'User/password authentication to get an access token'
      description: 'This method should be called to get an API token. This token will expire at some time.'
      operationId: api.controllers.login_controller.login_user
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Login successful'
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: 'Access unauthorized'
        default:
          $ref: '#/components/responses/ResponseError'

externalDocs:
  description: Find more about Wazuh API usage
  url: 'https://documentation.wazuh.com/current/user-manual/api/index.html'
